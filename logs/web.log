[2023-12-29 at 15:44:11 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835851679; nextExpiration=1703835851675; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:12 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835852786; nextExpiration=1703835852679; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:13 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Start expire sessions StandardManager at 1703835853734 sessioncount 0
[2023-12-29 at 15:44:13 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - End expire sessions StandardManager processingTime 0 expired sessions: 0
[2023-12-29 at 15:44:13 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835853799; nextExpiration=1703835853786; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:14 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835854819; nextExpiration=1703835854799; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:15 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835855824; nextExpiration=1703835855819; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:16 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835856829; nextExpiration=1703835856824; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:17 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835857835; nextExpiration=1703835857829; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:18 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835858841; nextExpiration=1703835858835; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:19 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835859848; nextExpiration=1703835859841; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:20 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835860854; nextExpiration=1703835860848; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:21 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835861860; nextExpiration=1703835861854; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:22 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835862868; nextExpiration=1703835862860; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:23 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835863874; nextExpiration=1703835863868; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:24 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835864879; nextExpiration=1703835864874; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:25 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:254) - [f1f4f77e-1, L:/127.0.0.1:8399 - R:/127.0.0.1:7861] Received last HTTP packet
[2023-12-29 at 15:44:25 CST] [TRACE] reactor.util.Loggers$Slf4JLogger.trace(Loggers.java:244) - [f1f4f77e, L:/127.0.0.1:8399 - R:/127.0.0.1:7861] Disposing ChannelOperation from a channel
java.lang.Exception: ChannelOperation terminal stack
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:492) ~[reactor-netty-core-1.1.13.jar:1.1.13]
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768) ~[reactor-netty-http-1.1.13.jar:1.1.13]
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114) ~[reactor-netty-core-1.1.13.jar:1.1.13]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2023-12-29 at 15:44:25 CST] [TRACE] org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:117) - Decoded "{"answer": "**案例**\n\n问题现象：分布式系统中，服务注册和发现困难。\n\n问题原因：微服务架构采用Spring Cloud框架，Netflix Eureka作为服务发现组件，但Eureka存在一定的局限性，如不能发现已经停止的服务、服务注册顺序不一致等问题。\n\n措施：采用Spring Cloud Config Server + Spring Cloud Gateway进行服务注册和发现。其中，Config Server用于管理配置信息， Gateway用于承载业务流量，实现服务注册和发现。通过Config Server，可以保证服务注册顺序的一致性，通过Gateway，可以实现服务的负载均衡和流量分发。", "docs": ["出处 [1] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n二、符合一些应用标准的要求，比如不同国家的用户不同的操作习惯和要求，项目工程中的可维护性、可测试性等要求。\n\n", "出处 [2] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n软件系统的复杂性和规模也在不断增大，软件安全性和质量的保证成为各大公司及个人日益关注的焦点，\n\n", "出处 [3] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n2、避免软件开发过程中的缺陷；\n3、衡量软件的品质；\n4、关注用户的需求。\n\n"]}"
[2023-12-29 at 15:44:25 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [f1f4f77e, L:/127.0.0.1:8399 - R:/127.0.0.1:7861] onStateChange(POST{uri=/chat/knowledge_base_chat, connection=PooledConnection{channel=[id: 0xf1f4f77e, L:/127.0.0.1:8399 - R:/127.0.0.1:7861]}}, [response_completed])
[2023-12-29 at 15:44:25 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [f1f4f77e, L:/127.0.0.1:8399 - R:/127.0.0.1:7861] onStateChange(POST{uri=/chat/knowledge_base_chat, connection=PooledConnection{channel=[id: 0xf1f4f77e, L:/127.0.0.1:8399 - R:/127.0.0.1:7861]}}, [disconnecting])
[2023-12-29 at 15:44:25 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:254) - [f1f4f77e, L:/127.0.0.1:8399 - R:/127.0.0.1:7861] Releasing channel
[2023-12-29 at 15:44:25 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [f1f4f77e, L:/127.0.0.1:8399 - R:/127.0.0.1:7861] Channel cleaned, now: 3 active connections, 4 inactive connections and 0 pending acquire requests.
[2023-12-29 at 15:44:25 CST] [INFO ] com.springboottest.springboot_01.util.FileUtil.lambda$processResponse$0(FileUtil.java:123) - {"answer": "**案例**\n\n问题现象：分布式系统中，服务注册和发现困难。\n\n问题原因：微服务架构采用Spring Cloud框架，Netflix Eureka作为服务发现组件，但Eureka存在一定的局限性，如不能发现已经停止的服务、服务注册顺序不一致等问题。\n\n措施：采用Spring Cloud Config Server + Spring Cloud Gateway进行服务注册和发现。其中，Config Server用于管理配置信息， Gateway用于承载业务流量，实现服务注册和发现。通过Config Server，可以保证服务注册顺序的一致性，通过Gateway，可以实现服务的负载均衡和流量分发。", "docs": ["出处 [1] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n二、符合一些应用标准的要求，比如不同国家的用户不同的操作习惯和要求，项目工程中的可维护性、可测试性等要求。\n\n", "出处 [2] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n软件系统的复杂性和规模也在不断增大，软件安全性和质量的保证成为各大公司及个人日益关注的焦点，\n\n", "出处 [3] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n2、避免软件开发过程中的缺陷；\n3、衡量软件的品质；\n4、关注用户的需求。\n\n"]}
[2023-12-29 at 15:44:25 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:142) - Fetching Redis Connection from RedisConnectionFactory
[2023-12-29 at 15:44:25 CST] [DEBUG] io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:202) - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:44:25 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:430) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:44:25 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:207) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() done
[2023-12-29 at 15:44:25 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:383) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2023-12-29 at 15:44:25 CST] [DEBUG] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:44:25 CST] [TRACE] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:103) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] Sent: *3
$3
SET
$58
responseData:20231229:md5_a6c7ff0abd2cb6673833af2bb9362468
$636
**案例**

问题现象：分布式系统中，服务注册和发现困难。

问题原因：微服务架构采用Spring Cloud框架，Netflix Eureka作为服务发现组件，但Eureka存在一定的局限性，如不能发现已经停止的服务、服务注册顺序不一致等问题。

措施：采用Spring Cloud Config Server + Spring Cloud Gateway进行服务注册和发现。其中，Config Server用于管理配置信息， Gateway用于承载业务流量，实现服务注册和发现。通过Config Server，可以保证服务注册顺序的一致性，通过Gateway，可以实现服务的负载均衡和流量分发。
[2023-12-29 at 15:44:25 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:576) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2023-12-29 at 15:44:25 CST] [TRACE] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:591) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Buffer: +OK
[2023-12-29 at 15:44:25 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:650) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
[2023-12-29 at 15:44:25 CST] [DEBUG] io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:303) - Decode done, empty stack: true
[2023-12-29 at 15:44:25 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:678) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:44:25 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:378) - Closing Redis Connection
[2023-12-29 at 15:44:25 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835865885; nextExpiration=1703835865879; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:26 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835866891; nextExpiration=1703835866885; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:27 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835867896; nextExpiration=1703835867891; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:28 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835868901; nextExpiration=1703835868896; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:29 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835869907; nextExpiration=1703835869901; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:30 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [f1f4f77e, L:/127.0.0.1:8399 ! R:/127.0.0.1:7861] onStateChange(PooledConnection{channel=[id: 0xf1f4f77e, L:/127.0.0.1:8399 ! R:/127.0.0.1:7861]}, [disconnecting])
[2023-12-29 at 15:44:30 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835870912; nextExpiration=1703835870907; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:31 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835871918; nextExpiration=1703835871912; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:32 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835872923; nextExpiration=1703835872918; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:33 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835873929; nextExpiration=1703835873923; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:34 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835874933; nextExpiration=1703835874929; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:35 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835875939; nextExpiration=1703835875933; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:36 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835876944; nextExpiration=1703835876939; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:37 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835877950; nextExpiration=1703835877944; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:38 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835878954; nextExpiration=1703835878950; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:39 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835879959; nextExpiration=1703835879954; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:40 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835880965; nextExpiration=1703835880959; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:41 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835881971; nextExpiration=1703835881965; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:42 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835882975; nextExpiration=1703835882971; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:43 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835883981; nextExpiration=1703835883975; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:44 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835884986; nextExpiration=1703835884981; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:45 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835885992; nextExpiration=1703835885986; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:46 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835886998; nextExpiration=1703835886992; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:48 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835888003; nextExpiration=1703835887998; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:49 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835889008; nextExpiration=1703835889003; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:50 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835890014; nextExpiration=1703835890008; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:51 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835891020; nextExpiration=1703835891014; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:52 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835892025; nextExpiration=1703835892020; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:53 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835893032; nextExpiration=1703835893025; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:54 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835894037; nextExpiration=1703835894032; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:55 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835895043; nextExpiration=1703835895037; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:56 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835896048; nextExpiration=1703835896043; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:57 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835897053; nextExpiration=1703835897048; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:58 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835898059; nextExpiration=1703835898053; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:44:59 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835899065; nextExpiration=1703835899059; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:00 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835900071; nextExpiration=1703835900065; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:01 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835901076; nextExpiration=1703835901071; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:02 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835902079; nextExpiration=1703835902076; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:03 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835903085; nextExpiration=1703835903079; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:04 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835904095; nextExpiration=1703835904085; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:05 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835905098; nextExpiration=1703835905095; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:06 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835906103; nextExpiration=1703835906098; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:07 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835907108; nextExpiration=1703835907103; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:08 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835908113; nextExpiration=1703835908108; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:09 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835909117; nextExpiration=1703835909113; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:10 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835910123; nextExpiration=1703835910117; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:11 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:254) - [ab240531-2, L:/127.0.0.1:7559 - R:/127.0.0.1:7861] Received last HTTP packet
[2023-12-29 at 15:45:11 CST] [TRACE] reactor.util.Loggers$Slf4JLogger.trace(Loggers.java:244) - [ab240531, L:/127.0.0.1:7559 - R:/127.0.0.1:7861] Disposing ChannelOperation from a channel
java.lang.Exception: ChannelOperation terminal stack
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:492) ~[reactor-netty-core-1.1.13.jar:1.1.13]
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768) ~[reactor-netty-http-1.1.13.jar:1.1.13]
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114) ~[reactor-netty-core-1.1.13.jar:1.1.13]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2023-12-29 at 15:45:11 CST] [TRACE] org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:117) - Decoded "{"answer": "**案例**\n\n问题现象：使用IntelliJ IDEA作为主要的集成开发环境，引入Git进行分布式版本控制，实现代码的高效管理和团队协作。采用Kubernetes作为容器编排工具，实现服务的自动化部署、伸缩和管理。使用Helm作为包管理工具，简化了应用程序的部署和升级。\n\n问题原因：开发团队需要高效地管理代码和实现自动化部署、伸缩和管理服务。\n\n措施：使用IntelliJ IDEA作为主要的集成开发环境，引入Git进行分布式版本控制，实现代码的高效管理和团队协作。采用Kubernetes作为容器编排工具，实现服务的自动化部署、伸缩和管理。使用Helm作为包管理工具，简化了应用程序的部署和升级。", "docs": ["出处 [1] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n3、衡量软件的品质；\n4、关注用户的需求。\n总的目标是：确保软件的质量\n\n", "出处 [2] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n2、避免软件开发过程中的缺陷；\n3、衡量软件的品质；\n4、关注用户的需求。\n\n", "出处 [3] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n4、关注用户的需求。\n总的目标是：确保软件的质量\n5软件测试方法及流程\n\n"]}"
[2023-12-29 at 15:45:11 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [ab240531, L:/127.0.0.1:7559 - R:/127.0.0.1:7861] onStateChange(POST{uri=/chat/knowledge_base_chat, connection=PooledConnection{channel=[id: 0xab240531, L:/127.0.0.1:7559 - R:/127.0.0.1:7861]}}, [response_completed])
[2023-12-29 at 15:45:11 CST] [INFO ] com.springboottest.springboot_01.util.FileUtil.lambda$processResponse$0(FileUtil.java:123) - {"answer": "**案例**\n\n问题现象：使用IntelliJ IDEA作为主要的集成开发环境，引入Git进行分布式版本控制，实现代码的高效管理和团队协作。采用Kubernetes作为容器编排工具，实现服务的自动化部署、伸缩和管理。使用Helm作为包管理工具，简化了应用程序的部署和升级。\n\n问题原因：开发团队需要高效地管理代码和实现自动化部署、伸缩和管理服务。\n\n措施：使用IntelliJ IDEA作为主要的集成开发环境，引入Git进行分布式版本控制，实现代码的高效管理和团队协作。采用Kubernetes作为容器编排工具，实现服务的自动化部署、伸缩和管理。使用Helm作为包管理工具，简化了应用程序的部署和升级。", "docs": ["出处 [1] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n3、衡量软件的品质；\n4、关注用户的需求。\n总的目标是：确保软件的质量\n\n", "出处 [2] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n2、避免软件开发过程中的缺陷；\n3、衡量软件的品质；\n4、关注用户的需求。\n\n", "出处 [3] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n4、关注用户的需求。\n总的目标是：确保软件的质量\n5软件测试方法及流程\n\n"]}
[2023-12-29 at 15:45:11 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [ab240531, L:/127.0.0.1:7559 - R:/127.0.0.1:7861] onStateChange(POST{uri=/chat/knowledge_base_chat, connection=PooledConnection{channel=[id: 0xab240531, L:/127.0.0.1:7559 - R:/127.0.0.1:7861]}}, [disconnecting])
[2023-12-29 at 15:45:11 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:254) - [ab240531, L:/127.0.0.1:7559 - R:/127.0.0.1:7861] Releasing channel
[2023-12-29 at 15:45:11 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [ab240531, L:/127.0.0.1:7559 - R:/127.0.0.1:7861] Channel cleaned, now: 2 active connections, 5 inactive connections and 0 pending acquire requests.
[2023-12-29 at 15:45:11 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:142) - Fetching Redis Connection from RedisConnectionFactory
[2023-12-29 at 15:45:11 CST] [DEBUG] io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:202) - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:45:11 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:430) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:45:11 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:207) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() done
[2023-12-29 at 15:45:11 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:383) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2023-12-29 at 15:45:11 CST] [DEBUG] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:45:11 CST] [TRACE] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:103) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] Sent: *3
$3
SET
$58
responseData:20231229:md5_3b6c29c6403ba8d49cf555e4e3a6d711
$763
**案例**

问题现象：使用IntelliJ IDEA作为主要的集成开发环境，引入Git进行分布式版本控制，实现代码的高效管理和团队协作。采用Kubernetes作为容器编排工具，实现服务的自动化部署、伸缩和管理。使用Helm作为包管理工具，简化了应用程序的部署和升级。

问题原因：开发团队需要高效地管理代码和实现自动化部署、伸缩和管理服务。

措施：使用IntelliJ IDEA作为主要的集成开发环境，引入Git进行分布式版本控制，实现代码的高效管理和团队协作。采用Kubernetes作为容器编排工具，实现服务的自动化部署、伸缩和管理。使用Helm作为包管理工具，简化了应用程序的部署和升级。
[2023-12-29 at 15:45:11 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:576) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2023-12-29 at 15:45:11 CST] [TRACE] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:591) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Buffer: +OK
[2023-12-29 at 15:45:11 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:650) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
[2023-12-29 at 15:45:11 CST] [DEBUG] io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:303) - Decode done, empty stack: true
[2023-12-29 at 15:45:11 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:678) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:45:11 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:378) - Closing Redis Connection
[2023-12-29 at 15:45:11 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835911128; nextExpiration=1703835911123; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:12 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835912133; nextExpiration=1703835912128; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:13 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835913139; nextExpiration=1703835913133; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:13 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Start expire sessions StandardManager at 1703835913814 sessioncount 0
[2023-12-29 at 15:45:13 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - End expire sessions StandardManager processingTime 0 expired sessions: 0
[2023-12-29 at 15:45:14 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835914144; nextExpiration=1703835914139; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:15 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835915149; nextExpiration=1703835915144; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:16 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [ab240531, L:/127.0.0.1:7559 ! R:/127.0.0.1:7861] onStateChange(PooledConnection{channel=[id: 0xab240531, L:/127.0.0.1:7559 ! R:/127.0.0.1:7861]}, [disconnecting])
[2023-12-29 at 15:45:16 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835916154; nextExpiration=1703835916149; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:17 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835917159; nextExpiration=1703835917154; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:18 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835918164; nextExpiration=1703835918159; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:19 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835919200; nextExpiration=1703835919164; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:20 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835920206; nextExpiration=1703835920200; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:21 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835921210; nextExpiration=1703835921206; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:22 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835922216; nextExpiration=1703835922210; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:23 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835923221; nextExpiration=1703835923216; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:24 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835924225; nextExpiration=1703835924221; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:25 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835925237; nextExpiration=1703835925225; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:26 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835926242; nextExpiration=1703835926237; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:27 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835927248; nextExpiration=1703835927242; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:28 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835928252; nextExpiration=1703835928248; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:29 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835929273; nextExpiration=1703835929252; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:30 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835930289; nextExpiration=1703835930273; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:31 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835931297; nextExpiration=1703835931289; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:32 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835932301; nextExpiration=1703835932297; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:33 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835933304; nextExpiration=1703835933301; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:34 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835934310; nextExpiration=1703835934304; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:35 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835935316; nextExpiration=1703835935310; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:36 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835936322; nextExpiration=1703835936316; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:37 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835937327; nextExpiration=1703835937322; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:38 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835938333; nextExpiration=1703835938327; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:39 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835939338; nextExpiration=1703835939333; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:40 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835940344; nextExpiration=1703835940338; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:41 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835941348; nextExpiration=1703835941344; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:42 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835942353; nextExpiration=1703835942348; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:43 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835943358; nextExpiration=1703835943353; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:44 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835944363; nextExpiration=1703835944358; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:45 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835945369; nextExpiration=1703835945363; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:46 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835946373; nextExpiration=1703835946369; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:47 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835947379; nextExpiration=1703835947373; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:48 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835948385; nextExpiration=1703835948379; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:49 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835949391; nextExpiration=1703835949385; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:50 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835950397; nextExpiration=1703835950391; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:51 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835951403; nextExpiration=1703835951397; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:52 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835952410; nextExpiration=1703835952403; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:53 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835953416; nextExpiration=1703835953410; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:54 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835954422; nextExpiration=1703835954416; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:55 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835955427; nextExpiration=1703835955422; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:56 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835956433; nextExpiration=1703835956427; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:57 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835957438; nextExpiration=1703835957433; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:58 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835958443; nextExpiration=1703835958438; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:45:59 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835959448; nextExpiration=1703835959443; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:00 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835960454; nextExpiration=1703835960448; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:01 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835961462; nextExpiration=1703835961454; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:02 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835962466; nextExpiration=1703835962462; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:03 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835963471; nextExpiration=1703835963466; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:04 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835964473; nextExpiration=1703835964471; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:05 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835965475; nextExpiration=1703835965473; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:06 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835966486; nextExpiration=1703835966475; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:07 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835967491; nextExpiration=1703835967486; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:08 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835968512; nextExpiration=1703835968491; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:09 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835969517; nextExpiration=1703835969512; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:10 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835970525; nextExpiration=1703835970517; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:11 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835971538; nextExpiration=1703835971525; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:12 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835972549; nextExpiration=1703835972538; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:13 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835973565; nextExpiration=1703835973549; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:13 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Start expire sessions StandardManager at 1703835973860 sessioncount 0
[2023-12-29 at 15:46:13 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - End expire sessions StandardManager processingTime 1 expired sessions: 0
[2023-12-29 at 15:46:14 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835974566; nextExpiration=1703835974565; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:15 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835975580; nextExpiration=1703835975566; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:16 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835976582; nextExpiration=1703835976580; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:17 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835977596; nextExpiration=1703835977582; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:18 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835978599; nextExpiration=1703835978596; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:19 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835979603; nextExpiration=1703835979599; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:20 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835980612; nextExpiration=1703835980603; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:21 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835981617; nextExpiration=1703835981612; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:22 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835982627; nextExpiration=1703835982617; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:23 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835983631; nextExpiration=1703835983627; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:24 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835984640; nextExpiration=1703835984631; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:25 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835985644; nextExpiration=1703835985640; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:26 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835986656; nextExpiration=1703835986644; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:27 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835987660; nextExpiration=1703835987656; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:28 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835988666; nextExpiration=1703835988660; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:29 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835989672; nextExpiration=1703835989666; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:29 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:254) - [922b3cf2-1, L:/127.0.0.1:8398 - R:/127.0.0.1:7861] Received last HTTP packet
[2023-12-29 at 15:46:29 CST] [TRACE] reactor.util.Loggers$Slf4JLogger.trace(Loggers.java:244) - [922b3cf2, L:/127.0.0.1:8398 - R:/127.0.0.1:7861] Disposing ChannelOperation from a channel
java.lang.Exception: ChannelOperation terminal stack
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:492) ~[reactor-netty-core-1.1.13.jar:1.1.13]
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768) ~[reactor-netty-http-1.1.13.jar:1.1.13]
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114) ~[reactor-netty-core-1.1.13.jar:1.1.13]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2023-12-29 at 15:46:29 CST] [TRACE] org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:117) - Decoded "{"answer": "**案例**\n\n问题现象：在分布式系统中，由于各个微服务之间的通信和协调问题，导致分布式事务的原子性和一致性不能得到保证。\n\n问题原因：在分布式事务管理中，各个微服务之间缺乏有效的通信和协调机制，导致分布式事务处理过程中出现数据不一致的问题。\n\n措施：采用Seata作为分布式事务管理器，通过全局事务ID协调各个微服务的事务操作，确保分布式事务的原子性和一致性。同时，引入消息队列（Kafka）进行异步事务处理，提高系统的可用性和性能。\n\n**案例**\n\n问题现象：在分布式系统中，由于各个微服务之间的通信和协调问题，导致分布式事务的原子性和一致性不能得到保证。\n\n问题原因：在分布式事务管理中，各个微服务之间缺乏有效的通信和协调机制，导致分布式事务处理过程中出现数据不一致的问题。\n\n措施：采用Seata作为分布式事务管理器，通过全局事务ID协调各个微服务的事务操作，确保分布式事务的原子性和一致性。同时，引入消息队列（Kafka）进行异步事务处理，提高系统的可用性和性能。", "docs": ["出处 [1] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n二、符合一些应用标准的要求，比如不同国家的用户不同的操作习惯和要求，项目工程中的可维护性、可测试性等要求。\n\n", "出处 [2] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n3、衡量软件的品质；\n4、关注用户的需求。\n总的目标是：确保软件的质量\n\n", "出处 [3] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n2、避免软件开发过程中的缺陷；\n3、衡量软件的品质；\n4、关注用户的需求。\n\n"]}"
[2023-12-29 at 15:46:29 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [922b3cf2, L:/127.0.0.1:8398 - R:/127.0.0.1:7861] onStateChange(POST{uri=/chat/knowledge_base_chat, connection=PooledConnection{channel=[id: 0x922b3cf2, L:/127.0.0.1:8398 - R:/127.0.0.1:7861]}}, [response_completed])
[2023-12-29 at 15:46:29 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [922b3cf2, L:/127.0.0.1:8398 - R:/127.0.0.1:7861] onStateChange(POST{uri=/chat/knowledge_base_chat, connection=PooledConnection{channel=[id: 0x922b3cf2, L:/127.0.0.1:8398 - R:/127.0.0.1:7861]}}, [disconnecting])
[2023-12-29 at 15:46:29 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:254) - [922b3cf2, L:/127.0.0.1:8398 - R:/127.0.0.1:7861] Releasing channel
[2023-12-29 at 15:46:29 CST] [INFO ] com.springboottest.springboot_01.util.FileUtil.lambda$processResponse$0(FileUtil.java:123) - {"answer": "**案例**\n\n问题现象：在分布式系统中，由于各个微服务之间的通信和协调问题，导致分布式事务的原子性和一致性不能得到保证。\n\n问题原因：在分布式事务管理中，各个微服务之间缺乏有效的通信和协调机制，导致分布式事务处理过程中出现数据不一致的问题。\n\n措施：采用Seata作为分布式事务管理器，通过全局事务ID协调各个微服务的事务操作，确保分布式事务的原子性和一致性。同时，引入消息队列（Kafka）进行异步事务处理，提高系统的可用性和性能。\n\n**案例**\n\n问题现象：在分布式系统中，由于各个微服务之间的通信和协调问题，导致分布式事务的原子性和一致性不能得到保证。\n\n问题原因：在分布式事务管理中，各个微服务之间缺乏有效的通信和协调机制，导致分布式事务处理过程中出现数据不一致的问题。\n\n措施：采用Seata作为分布式事务管理器，通过全局事务ID协调各个微服务的事务操作，确保分布式事务的原子性和一致性。同时，引入消息队列（Kafka）进行异步事务处理，提高系统的可用性和性能。", "docs": ["出处 [1] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n二、符合一些应用标准的要求，比如不同国家的用户不同的操作习惯和要求，项目工程中的可维护性、可测试性等要求。\n\n", "出处 [2] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n3、衡量软件的品质；\n4、关注用户的需求。\n总的目标是：确保软件的质量\n\n", "出处 [3] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n2、避免软件开发过程中的缺陷；\n3、衡量软件的品质；\n4、关注用户的需求。\n\n"]}
[2023-12-29 at 15:46:29 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [922b3cf2, L:/127.0.0.1:8398 - R:/127.0.0.1:7861] Channel cleaned, now: 1 active connections, 6 inactive connections and 0 pending acquire requests.
[2023-12-29 at 15:46:29 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:142) - Fetching Redis Connection from RedisConnectionFactory
[2023-12-29 at 15:46:29 CST] [DEBUG] io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:202) - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:29 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:430) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:29 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:207) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() done
[2023-12-29 at 15:46:29 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:383) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2023-12-29 at 15:46:29 CST] [DEBUG] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:29 CST] [TRACE] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:103) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] Sent: *3
$3
SET
$58
responseData:20231229:md5_7ad12efd36f3bfedadca5d34afe7a004
$1222
**案例**

问题现象：在分布式系统中，由于各个微服务之间的通信和协调问题，导致分布式事务的原子性和一致性不能得到保证。

问题原因：在分布式事务管理中，各个微服务之间缺乏有效的通信和协调机制，导致分布式事务处理过程中出现数据不一致的问题。

措施：采用Seata作为分布式事务管理器，通过全局事务ID协调各个微服务的事务操作，确保分布式事务的原子性和一致性。同时，引入消息队列（Kafka）进行异步事务处理，提高系统的可用性和性能。

**案例**

问题现象：在分布式系统中，由于各个微服务之间的通信和协调问题，导致分布式事务的原子性和一致性不能得到保证。

问题原因：在分布式事务管理中，各个微服务之间缺乏有效的通信和协调机制，导致分布式事务处理过程中出现数据不一致的问题。

措施：采用Seata作为分布式事务管理器，通过全局事务ID协调各个微服务的事务操作，确保分布式事务的原子性和一致性。同时，引入消息队列（Kafka）进行异步事务处理，提高系统的可用性和性能。
[2023-12-29 at 15:46:29 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:576) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2023-12-29 at 15:46:29 CST] [TRACE] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:591) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Buffer: +OK
[2023-12-29 at 15:46:29 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:650) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
[2023-12-29 at 15:46:29 CST] [DEBUG] io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:303) - Decode done, empty stack: true
[2023-12-29 at 15:46:29 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:678) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:29 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:378) - Closing Redis Connection
[2023-12-29 at 15:46:30 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835990676; nextExpiration=1703835990672; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:31 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835991681; nextExpiration=1703835991676; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:32 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835992686; nextExpiration=1703835992681; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:33 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835993691; nextExpiration=1703835993686; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:34 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835994696; nextExpiration=1703835994691; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:34 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [922b3cf2, L:/127.0.0.1:8398 ! R:/127.0.0.1:7861] onStateChange(PooledConnection{channel=[id: 0x922b3cf2, L:/127.0.0.1:8398 ! R:/127.0.0.1:7861]}, [disconnecting])
[2023-12-29 at 15:46:35 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835995701; nextExpiration=1703835995696; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:36 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835996706; nextExpiration=1703835996701; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:37 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835997711; nextExpiration=1703835997706; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:38 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835998715; nextExpiration=1703835998711; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:39 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703835999720; nextExpiration=1703835999715; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:40 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836000725; nextExpiration=1703836000720; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:41 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836001730; nextExpiration=1703836001725; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:42 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836002735; nextExpiration=1703836002730; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:43 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836003739; nextExpiration=1703836003735; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:43 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:254) - [9fc4635d-1, L:/127.0.0.1:8396 - R:/127.0.0.1:7861] Received last HTTP packet
[2023-12-29 at 15:46:43 CST] [TRACE] reactor.util.Loggers$Slf4JLogger.trace(Loggers.java:244) - [9fc4635d, L:/127.0.0.1:8396 - R:/127.0.0.1:7861] Disposing ChannelOperation from a channel
java.lang.Exception: ChannelOperation terminal stack
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:492) ~[reactor-netty-core-1.1.13.jar:1.1.13]
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768) ~[reactor-netty-http-1.1.13.jar:1.1.13]
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114) ~[reactor-netty-core-1.1.13.jar:1.1.13]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2023-12-29 at 15:46:43 CST] [TRACE] org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:117) - Decoded "{"answer": "**案例**\n\n问题现象：软件开发过程中出现性能瓶颈，导致系统在高并发场景下运行不稳健。\n\n问题原因：软件开发过程中没有进行性能优化，采用了不合适的技术手段。\n\n措施：采用分布式事务、消息队列、缓存、负载均衡等技术手段，提高系统的性能和可扩展性。通过合理的技术选型和优化，确保系统在高并发场景下依然稳健运行。\n\n**案例**\n\n问题现象：软件在用户使用过程中出现大量错误，导致用户体验极差。\n\n问题原因：软件开发过程中没有充分关注用户需求，没有对用户进行充分的调查和分析。\n\n措施：进行用户调查和分析，深入了解用户的需求和操作习惯。在软件开发过程中，充分考虑用户的需求，提高软件的易用性和用户体验。\n\n**案例**\n\n问题现象：软件在项目工程中可维护性、可测试性较差，导致项目工程难以进行。\n\n问题原因：软件开发过程中没有注重可维护性和可测试性，没有对软件的结构和设计进行合理的规划。\n\n措施：在软件开发过程中，注重可维护性和可测试性，对软件的结构和设计进行合理的规划。采用适当的软件架构和设计模式，提高软件的可维护性和可测试性。", "docs": ["出处 [1] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n2、避免软件开发过程中的缺陷；\n3、衡量软件的品质；\n4、关注用户的需求。\n\n", "出处 [2] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n3、衡量软件的品质；\n4、关注用户的需求。\n总的目标是：确保软件的质量\n\n", "出处 [3] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n二、符合一些应用标准的要求，比如不同国家的用户不同的操作习惯和要求，项目工程中的可维护性、可测试性等要求。\n\n"]}"
[2023-12-29 at 15:46:43 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [9fc4635d, L:/127.0.0.1:8396 - R:/127.0.0.1:7861] onStateChange(POST{uri=/chat/knowledge_base_chat, connection=PooledConnection{channel=[id: 0x9fc4635d, L:/127.0.0.1:8396 - R:/127.0.0.1:7861]}}, [response_completed])
[2023-12-29 at 15:46:43 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [9fc4635d, L:/127.0.0.1:8396 - R:/127.0.0.1:7861] onStateChange(POST{uri=/chat/knowledge_base_chat, connection=PooledConnection{channel=[id: 0x9fc4635d, L:/127.0.0.1:8396 - R:/127.0.0.1:7861]}}, [disconnecting])
[2023-12-29 at 15:46:43 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:254) - [9fc4635d, L:/127.0.0.1:8396 - R:/127.0.0.1:7861] Releasing channel
[2023-12-29 at 15:46:43 CST] [INFO ] com.springboottest.springboot_01.util.FileUtil.lambda$processResponse$0(FileUtil.java:123) - {"answer": "**案例**\n\n问题现象：软件开发过程中出现性能瓶颈，导致系统在高并发场景下运行不稳健。\n\n问题原因：软件开发过程中没有进行性能优化，采用了不合适的技术手段。\n\n措施：采用分布式事务、消息队列、缓存、负载均衡等技术手段，提高系统的性能和可扩展性。通过合理的技术选型和优化，确保系统在高并发场景下依然稳健运行。\n\n**案例**\n\n问题现象：软件在用户使用过程中出现大量错误，导致用户体验极差。\n\n问题原因：软件开发过程中没有充分关注用户需求，没有对用户进行充分的调查和分析。\n\n措施：进行用户调查和分析，深入了解用户的需求和操作习惯。在软件开发过程中，充分考虑用户的需求，提高软件的易用性和用户体验。\n\n**案例**\n\n问题现象：软件在项目工程中可维护性、可测试性较差，导致项目工程难以进行。\n\n问题原因：软件开发过程中没有注重可维护性和可测试性，没有对软件的结构和设计进行合理的规划。\n\n措施：在软件开发过程中，注重可维护性和可测试性，对软件的结构和设计进行合理的规划。采用适当的软件架构和设计模式，提高软件的可维护性和可测试性。", "docs": ["出处 [1] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n2、避免软件开发过程中的缺陷；\n3、衡量软件的品质；\n4、关注用户的需求。\n\n", "出处 [2] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n3、衡量软件的品质；\n4、关注用户的需求。\n总的目标是：确保软件的质量\n\n", "出处 [3] [test_db.docx](/knowledge_base/download_doc?knowledge_base_name=test1&file_name=test_db.docx) \n\n二、符合一些应用标准的要求，比如不同国家的用户不同的操作习惯和要求，项目工程中的可维护性、可测试性等要求。\n\n"]}
[2023-12-29 at 15:46:43 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [9fc4635d, L:/127.0.0.1:8396 - R:/127.0.0.1:7861] Channel cleaned, now: 0 active connections, 7 inactive connections and 0 pending acquire requests.
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:142) - Fetching Redis Connection from RedisConnectionFactory
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:202) - dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:430) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:207) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() done
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:383) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:103) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] Sent: *3
$3
SET
$58
responseData:20231229:md5_18d106ab0489af09edea3d8cfe634a2b
$1327
**案例**

问题现象：软件开发过程中出现性能瓶颈，导致系统在高并发场景下运行不稳健。

问题原因：软件开发过程中没有进行性能优化，采用了不合适的技术手段。

措施：采用分布式事务、消息队列、缓存、负载均衡等技术手段，提高系统的性能和可扩展性。通过合理的技术选型和优化，确保系统在高并发场景下依然稳健运行。

**案例**

问题现象：软件在用户使用过程中出现大量错误，导致用户体验极差。

问题原因：软件开发过程中没有充分关注用户需求，没有对用户进行充分的调查和分析。

措施：进行用户调查和分析，深入了解用户的需求和操作习惯。在软件开发过程中，充分考虑用户的需求，提高软件的易用性和用户体验。

**案例**

问题现象：软件在项目工程中可维护性、可测试性较差，导致项目工程难以进行。

问题原因：软件开发过程中没有注重可维护性和可测试性，没有对软件的结构和设计进行合理的规划。

措施：在软件开发过程中，注重可维护性和可测试性，对软件的结构和设计进行合理的规划。采用适当的软件架构和设计模式，提高软件的可维护性和可测试性。
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:576) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:591) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Buffer: +OK
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:650) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:303) - Decode done, empty stack: true
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:678) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:378) - Closing Redis Connection
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:142) - Fetching Redis Connection from RedisConnectionFactory
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:202) - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:430) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:207) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() done
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:383) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:103) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] Sent: *2
$3
GET
$58
responseData:20231229:md5_a6c7ff0abd2cb6673833af2bb9362468
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:576) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Received: 480 bytes, 1 commands in the stack
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:591) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Buffer: $636
**案例**

问题现象：分布式系统中，服务注册和发现困难。

问题原因：微服务架构采用Spring Cloud框架，Netflix Eureka作为服务发现组件，但Eureka存在一定的局限性，如不能发现已经停止的服务、服务注册顺序不一致等问题。

措施：采用Spring Cloud Config Server + Spring Cloud Gateway进行服务注册和发现。其中，Config Server用于管理配置信息， Gateway用于承载业务流量，�
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:650) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:303) - Decode done, empty stack: false
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:576) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Received: 164 bytes, 1 commands in the stack
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:591) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Buffer: �现服务注册和发现。通过Config Server，可以保证服务注册顺序的一致性，通过Gateway，可以实现服务的负载均衡和流量分发。
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:650) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:303) - Decode done, empty stack: true
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:678) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@1e1a7ab3, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:378) - Closing Redis Connection
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:142) - Fetching Redis Connection from RedisConnectionFactory
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:202) - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:430) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:207) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() done
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:383) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:103) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] Sent: *2
$3
GET
$58
responseData:20231229:md5_7ad12efd36f3bfedadca5d34afe7a004
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:576) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Received: 1231 bytes, 1 commands in the stack
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:591) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Buffer: $1222
**案例**

问题现象：在分布式系统中，由于各个微服务之间的通信和协调问题，导致分布式事务的原子性和一致性不能得到保证。

问题原因：在分布式事务管理中，各个微服务之间缺乏有效的通信和协调机制，导致分布式事务处理过程中出现数据不一致的问题。

措施：采用Seata作为分布式事务管理器，通过全局事务ID协调各个微服务的事务操作，确保分布式事务的原子性和一致性。同时，引入消息队列（Kafka）进行异步事务处理，提高系统的可用性和性能。

**案例**

问题现象：在分布式系统中，由于各个微服务之间的通信和协调问题，导致分布式事务的原子性和一致性不能得到保证。

问题原因：在分布式事务管理中，各个微服务之间缺乏有效的通信和协调机制，导致分布式事务处理过程中出现数据不一致的问题。

措施：采用Seata作为分布式事务管理器，通过全局事务ID协调各个微服务的事务操作，确保分布式事务的原子性和一致性。同时，引入消息队列（Kafka）进行异步事务处理，提高系统的可用性和性能。
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:650) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:303) - Decode done, empty stack: true
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:678) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@17a6d9b0, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:378) - Closing Redis Connection
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:142) - Fetching Redis Connection from RedisConnectionFactory
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:202) - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:430) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:207) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() done
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:383) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:103) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] Sent: *2
$3
GET
$58
responseData:20231229:md5_3b6c29c6403ba8d49cf555e4e3a6d711
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:576) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Received: 771 bytes, 1 commands in the stack
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:591) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Buffer: $763
**案例**

问题现象：使用IntelliJ IDEA作为主要的集成开发环境，引入Git进行分布式版本控制，实现代码的高效管理和团队协作。采用Kubernetes作为容器编排工具，实现服务的自动化部署、伸缩和管理。使用Helm作为包管理工具，简化了应用程序的部署和升级。

问题原因：开发团队需要高效地管理代码和实现自动化部署、伸缩和管理服务。

措施：使用IntelliJ IDEA作为主要的集成开发环境，引入Git进行分布式版本控制，实现代码的高效管理和团队协作。采用Kubernetes作为容器编排工具，实现服务的自动化部署、伸缩和管理。使用Helm作为包管理工具，简化了应用程序的部署和升级。
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:650) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:303) - Decode done, empty stack: true
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:678) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@7bd1daa4, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:378) - Closing Redis Connection
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:142) - Fetching Redis Connection from RedisConnectionFactory
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:202) - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:430) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:207) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() done
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:383) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:103) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] Sent: *2
$3
GET
$58
responseData:20231229:md5_fb4a37b57df187533415d3613334293a
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:576) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Received: 6 bytes, 1 commands in the stack
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:591) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Buffer: $0
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:650) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:303) - Decode done, empty stack: true
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:678) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@50db2dc5, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:378) - Closing Redis Connection
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:142) - Fetching Redis Connection from RedisConnectionFactory
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:202) - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:430) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:207) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() done
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:383) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:103) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] Sent: *2
$3
GET
$58
responseData:20231229:md5_a6d66e1b81d9e3b2cf1c17fc7035dd13
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:576) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Received: 443 bytes, 1 commands in the stack
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:591) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Buffer: $435
**案例**

问题现象：在软件开发过程中，未能充分考虑安全性。

问题原因：软件开发过程中，开发者过于关注功能开发，而忽视了安全性。

措施：在软件开发过程中，采用OAuth 2.0、JWT（JSON Web Token）、Spring Security和OWASP ZAP等安全性测试工具和策略，确保系统的身份认证与授权、访问控制、安全审计和安全防护等方面的安全性。
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:650) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:303) - Decode done, empty stack: true
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:678) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@3b93dd19, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:378) - Closing Redis Connection
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:142) - Fetching Redis Connection from RedisConnectionFactory
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:202) - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:430) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:207) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] write() done
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:383) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:103) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379] Sent: *2
$3
GET
$58
responseData:20231229:md5_18d106ab0489af09edea3d8cfe634a2b
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:576) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Received: 512 bytes, 1 commands in the stack
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:591) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Buffer: $1327
**案例**

问题现象：软件开发过程中出现性能瓶颈，导致系统在高并发场景下运行不稳健。

问题原因：软件开发过程中没有进行性能优化，采用了不合适的技术手段。

措施：采用分布式事务、消息队列、缓存、负载均衡等技术手段，提高系统的性能和可扩展性。通过合理的技术选型和优化，确保系统在高并发场景下依然稳健运行。

**案例**

问题现象：软件在用户使用过程中出�
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:650) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:303) - Decode done, empty stack: false
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:576) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Received: 824 bytes, 1 commands in the stack
[2023-12-29 at 15:46:43 CST] [TRACE] io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:591) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Buffer: ��大量错误，导致用户体验极差。

问题原因：软件开发过程中没有充分关注用户需求，没有对用户进行充分的调查和分析。

措施：进行用户调查和分析，深入了解用户的需求和操作习惯。在软件开发过程中，充分考虑用户的需求，提高软件的易用性和用户体验。

**案例**

问题现象：软件在项目工程中可维护性、可测试性较差，导致项目工程难以进行。

问题原因：软件开发过程中没有注重可维护性和可测试性，没有对软件的结构和设计进行合理的规划。

措施：在软件开发过程中，注重可维护性和可测试性，对软件的结构和设计进行合理的规划。采用适当的软件架构和设计模式，提高软件的可维护性和可测试性。
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:650) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:303) - Decode done, empty stack: true
[2023-12-29 at 15:46:43 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:678) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@7611f73a, error='null'], commandType=io.lettuce.core.protocol.Command]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.data.redis.core.RedisConnectionUtils.doCloseConnection(RedisConnectionUtils.java:378) - Closing Redis Connection
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:542) - Save core properties part
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:562) - Save content types part
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:566) - Save package relationships
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:580) - Save part 'docProps/app.xml'
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:580) - Save part 'docProps/core.xml'
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:580) - Save part 'word/document.xml'
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:580) - Save part 'word/settings.xml'
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:562) - Save content types part
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:566) - Save package relationships
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:580) - Save part 'docProps/app.xml'
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:580) - Save part 'docProps/core.xml'
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:580) - Save part 'word/document.xml'
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:580) - Save part 'word/settings.xml'
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.web.context.request.async.WebAsyncManager.setConcurrentResultAndDispatch(WebAsyncManager.java:375) - Async result set, dispatch to /chat/upload
[2023-12-29 at 15:46:43 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:175) - Req: 5e4a3a83  CReq: 6cf47fce  RP: 3f0cf715  Stage: 7  Thread:      pool-3-thread-1  State:                  N/A  Method: dispatch     URI: /chat/upload
org.apache.catalina.core.AsyncContextImpl$DebugException: null
	at org.apache.catalina.core.AsyncContextImpl.logDebug(AsyncContextImpl.java:497) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.AsyncContextImpl.dispatch(AsyncContextImpl.java:182) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.AsyncContextImpl.dispatch(AsyncContextImpl.java:175) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.AsyncContextImpl.dispatch(AsyncContextImpl.java:169) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.dispatch(StandardServletAsyncWebRequest.java:135) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.context.request.async.WebAsyncManager.setConcurrentResultAndDispatch(WebAsyncManager.java:377) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.context.request.async.WebAsyncManager.lambda$startDeferredResultProcessing$8(WebAsyncManager.java:445) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.context.request.async.DeferredResult.setResultInternal(DeferredResult.java:272) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.context.request.async.DeferredResult.setResult(DeferredResult.java:243) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.onComplete(ReactiveTypeHandler.java:490) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at reactor.core.publisher.StrictSubscriber.onComplete(StrictSubscriber.java:123) ~[reactor-core-3.6.0.jar:3.6.0]
	at reactor.core.publisher.MonoCompletionStage$MonoCompletionStageSubscription.apply(MonoCompletionStage.java:122) ~[reactor-core-3.6.0.jar:3.6.0]
	at reactor.core.publisher.MonoCompletionStage$MonoCompletionStageSubscription.apply(MonoCompletionStage.java:67) ~[reactor-core-3.6.0.jar:3.6.0]
	at java.base/java.util.concurrent.CompletableFuture.uniHandle(CompletableFuture.java:934) ~[?:?]
	at java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(CompletableFuture.java:911) ~[?:?]
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510) ~[?:?]
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1773) ~[?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Changing async state from [STARTED] to [DISPATCHING]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Processing socket [org.apache.tomcat.util.net.NioChannel@1b3a38fb:java.nio.channels.SocketChannel[connected local=/127.0.0.1:8080 remote=/127.0.0.1:7537]] with status [OPEN_READ]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Found processor [org.apache.coyote.http11.Http11Processor@26f76b0b] for socket [org.apache.tomcat.util.net.NioChannel@1b3a38fb:java.nio.channels.SocketChannel[connected local=/127.0.0.1:8080 remote=/127.0.0.1:7537]]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Removed processor [org.apache.coyote.http11.Http11Processor@26f76b0b] from waiting processors
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Security checking request POST /chat/upload
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) -   No applicable constraints defined
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Not subject to any constraint
[2023-12-29 at 15:46:43 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) -   Returning instance
[2023-12-29 at 15:46:43 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:175) - Req: 5e4a3a83  CReq: 6cf47fce  RP: 3f0cf715  Stage: 3  Thread: http-nio-8080-exec-8  State:                  N/A  Method: intDispatch  URI: /chat/upload
org.apache.catalina.core.AsyncContextImpl$DebugException: null
	at org.apache.catalina.core.AsyncContextImpl.logDebug(AsyncContextImpl.java:497) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.AsyncContextImpl.doInternalDispatch(AsyncContextImpl.java:335) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:165) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:235) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Changing async state from [DISPATCHING] to [DISPATCHED]
[2023-12-29 at 15:46:43 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) -   Returning instance
[2023-12-29 at 15:46:43 CST] [TRACE] org.springframework.web.filter.RequestContextFilter.initContextHolders(RequestContextFilter.java:115) - Bound request context to thread: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@52f11955
[2023-12-29 at 15:46:43 CST] [TRACE] org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:117) - "ASYNC" dispatch for POST "/chat/upload", parameters={multipart}, headers={masked} in DispatcherServlet 'dispatcherServlet'
[2023-12-29 at 15:46:43 CST] [TRACE] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255) - Returning cached instance of singleton bean 'chatController'
[2023-12-29 at 15:46:43 CST] [TRACE] org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:528) - Mapped to com.springboottest.springboot_01.controller.ChatController#uploadFile(List)
[2023-12-29 at 15:46:43 CST] [TRACE] org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:117) - Resume with async result [<200 OK OK,[B@63318cd9,[Content-Type:"application/octet-stream", Content-Disposition:"form-data; name="attachment"; filename="response.zip""]>]
[2023-12-29 at 15:46:43 CST] [TRACE] org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:173) - Arguments: []
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:216) - Found 'Content-Type:application/octet-stream' in response
[2023-12-29 at 15:46:43 CST] [TRACE] org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:117) - Writing [{80, 75, 3, 4, 20, 0, 8, 8, 8, 0, -43, 125, -99, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35, 0, 0, 0, 114, 101, 115, 112, 111, 110, 115, 101, 95, 100, 111, 99, 95, 49, 95, 50, 48, 50, 51, 49, 50, 50, 57, 95, 49, 53, 52, 54, 52, 51, 46, 100, 111, 99, 120, -115, 87, 9, 56, 84, 111, -33, 30, -58, -66, -116, 81, -10, -35, 100, 25, 75, 34, 89, 51, -123, -56, 24, 59, 35, 91, 24, 91, -123, 12, -115, 125, 45, 99, -33, 50, -74, 48, 74, 101, 29, 107, 72, 76, -42, 80, 89, 6, 17, -94, -78, 103, 47, -124, -20, -59, -53, -1, -67, -66, -21, 83, -33, -1, -5, -65, -17, 115, -82, -25, 92, -41, -71, -50, 117, 63, -25, 119, -33, -25, 62, -49, -17, 62, -122, 58, 64, 10, 22, 0, 13, 13, 13, 96, 40, -8, -111, 25, -32, -60, 56, 125, 52, -83, -82, -72, -93, -67, -100, -48, 94, -74, 72, 127, 15, 39, 79, 107, 41, 63, -73, -37, 47, -116, -21, -47, 109, -46, 12, 63, 89, -81, -72, -38, -111, -106, 13, 89, 34, -106, 25, -126, -29, -35, 34, 127, 0, 41, 98, 106, 34, -52, -103, -94, 117, -15, 7, -63, -50, -94, -67, -109, -110, 98, 88, 116, -50, -118, -97, -81, -112, 121, 25, 8, -35, -79, -123, -21, -93, -78, -115, -37, -49, 97, -31, -12, -29, -115, -33, -76, 62, -37, 36, -65, -70, -101, -46, -127, 75, 85, 112, -95, -31, 115, -103, 10, 51, -105, 27, -102, 19, 37, -65, 49, -70, 84, -55, 6, 51, 10, 122, 112, -54, -101, 73, -33, -114, 25, -30, 119, -11, 19, -18, 33, 68, -54, 68, 52, -9, -67, -43, 80, 104, 16, -108, -92, 85, 20, 38, -6, 61, 117, -128, 32, -120, 95, 98, -75, 124, -63, 13, 13, 84, 58, 72, 124, -1, -62, 80, 6, 116, 77, 98, 26, -119, 89, -19, 81, -65, 112, -103, -106, -115, 54, 50, 38, -84, 49, -63, -81, -99, 34, -87, -111, -41, 124, 86, -111, 49, 23, 58, -61, 10, 34, -67, -83, -100, 107, 50, 24, -41, -87, -94, 58, 96, 57, 91, 93, 54, -124, -62, -114, 43, -95, -59, 80, 72, 57, -44, 122, 70, 70, 70, 71, -85, -40, -68, -91, -16, -98, -31, 125, 74, -31, -108, -31, -8, 28, -57, -59, 105, -74, 85, -1, -77, -54, 66, -60, 46, 15, -95, -15, 25, 98, -58, -42, 69, -95, -74, 38, 46, -16, -18, -67, 81, -61, -121, -52, -123, -91, -51, 29, 50, -17, 103, 51, -41, 31, 43, -127, -93, 119, -68, 95, -58, -118, -75, -58, -9, 50, -49, 120, 77, -12, -100, 51, -44, -95, -90, -127, 8, -7, -33, -27, 33, 3, 0, 120, -127, 0, -128, -31, -1, 43, 46, -3, -47, -76, -59, 56, -35, -10, 60, 39, 117, 124, 46, 75, 30, 67, 0, 101, -64, 87, 109, -123, -69, -125, 21, 62, -45, 65, -34, 87, 43, 64, 126, -108, -61, -125, -17, 9, 102, -2, 106, -23, -47, -123, 23, 88, 78, -116, 11, 96, 107, 110, -85, -75, -112, -20, -26, 46, 78, -124, 58, 54, -62, -34, 116, 54, 24, 75, -27, 86, -124, 57, 13, 96, 5, -73, 78, 93, 93, -31, 85, -31, -25, 99, -9, 69, -59, 66, -88, 31, -122, 119, -110, -47, -33, 86, -8, 42, -118, 55, 116, -51, 97, 112, 16, 47, -128, 16, 21, 57, -112, 3, -115, 47, -34, 48, -79, 84, 94, 72, -114, -2, 90, -112, -62, 99, -12, 53, 35, 48, -85, -81, 25, 101, -32, 51, 84, 83, 43, 127, -24, -8, 74, 105, -32, 27, 54, -84, -127, 94, 71, -102, -70, 27, 86, 20, -90, -48, -39, 66, -75, -42, 14, 47, -43, -93, 28, 30, 10, -52, -103, 24, 68, 12, 39, 100, -13, 53, 85, -55, 46, -77, -77, -93, -26, -35, -82, 77, -56, -101, 58, 62, -50, 23, -111, -55, 63, 124, -16, 52, -27, 20, 53, 93, 28, -110, 27, -6, 21, 62, -117, -17, -17, -119, 79, 74, -41, -67, 107, 82, 119, 32, 41, -97, 108, -81, -6, -58, 96, 41, 2, 7, -37, -89, -52, 98, 58, 22, -90, -97, 120, -66, 116, -14, -120, -74, 14, -7, 63, 9, 3, 62, -102, -114, -18, 14, -122, 24, 119, 15, -49, 115, 118, 30, 30, -57, -106, -45, -69, -33, 66, -41, 42, 13, -42, 88, -59, 30, -126, 49, -18, -75, 1, -32, -92, 11, -7, 2, 88, -47, -64, 62, 38, -102, -59, 15, 84, 120, 61, -8, -75, -59, -7, -84, -108, -128, -121, -100, 115, 107, -56, -38, 61, -51, 6, 25, 39, 118, 66, 90, 125, 93, 18, 121, 103, 100, 127, -1, -13, -76, -60, -3, 124, -27, 46, 125, 119, 5, 23, -72, -96, -67, 125, -108, 69, 42, -11, -20, -75, -34, -18, 53, 10, -36, 114, -4, -8, 76, 93, 55, -14, -127, -104, -112, 59, -15, -11, -113, 112, 105, -67, -34, 105, -91, -111, 116, 45, -5, 17, -123, 30, 50, 15, -89, 60, -26, 118, -15, -112, 80, -29, -110, 75, 111, -33, 88, -76, 105, -86, 111, -9, -77, -28, 113, -96, -51, 40, 15, 27, -79, -113, -61, 14, 0, -57, -124, -28, -47, 97, -126, 41, 71, -27, 18, 1, -1, 68, -120, -7, 36, 33, 7, 119, -116, -45, 49, 35, 55, -100, -75, 78, -101, 52, 75, -28, 33, -94, 35, 56, 112, 79, -90, 32, -78, -26, 74, 106, -24, 19, 69, -113, -13, 107, 82, 66, -19, 53, 35, 65, 56, -115, -117, -121, -115, -50, -113, 88, 7, -21, -123, 86, 61, -7, -12, -57, 93, 60, -111, 64, 127, -83, -7, -64, 92, 87, 124, 33, -89, 48, 33, 34, -87, 17, -19, -70, 71, -100, 16, -103, 79, -35, 121, -11, 98, 38, -84, -33, -36, -60, 109, -95, -96, 40, -36, -87, 85, 113, 84, -55, -95, 63, -126, 15, 22, -61, -75, -100, 89, 33, -73, -84, 94, -63, -16, 42, 14, -60, -70, -19, 44, -28, -59, 96, 27, 111, -94, -14, -70, -60, -75, 5, -77, -42, 101, 21, 14, 33, 125, 120, 34, -19, -47, 9, -116, -46, -50, 24, 121, 3, 55, 64, -120, -79, -27, 7, 123, -74, 73, -30, -56, 61, 84, 35, -108, -3, 58, 6, 120, 66, 70, -18, -23, -17, -34, -91, -98, 115, 20, 76, 108, -78, 37, -36, -31, 25, -88, 124, -8, -110, 104, 4, 50, -16, -83, 101, -38, 88, -41, 126, 86, -8, -116, 62, 79, -49, -37, 88, 118, 10, 71, -99, 42, 68, 103, -66, 83, 81, -103, -76, 58, 99, 104, 99, -67, 90, 91, 45, 86, -107, -93, -69, 14, 17, -109, -38, -6, -56, 105, 85, -10, -79, 56, -88, 124, 114, -8, -89, -48, 79, 101, -18, -31, -21, 111, -43, -107, -123, -22, -9, -77, 98, -84, -78, 37, 118, 76, 60, 55, 104, -113, 69, 100, -62, -84, 17, -87, -114, 62, -105, 10, -78, -1, 36, -94, -81, 59, -58, -15, -36, -111, -110, -34, 110, 71, 27, -46, -79, -120, -53, -26, 86, 6, -36, 90, 44, 33, -49, 6, 15, 81, 107, -16, -95, -116, -71, -89, -59, 16, -11, -16, -28, 11, 122, 16, -31, 36, 56, 107, -111, 59, 72, 50, -122, -43, 22, -25, -122, 88, -81, 121, 91, 43, -41, 36, 50, 103, 31, 47, 99, -127, 117, -120, 26, 116, 69, -53, 52, -107, 46, -13, -89, 60, -6, 56, 38, 122, -96, -2, -18, 91, 105, 58, -91, 46, 121, -22, -42, -45, -82, -72, -78, -79, 76, -91, -12, -43, -96, -7, -13, 23, -125, -66, -28, 15, -40, -19, -90, -84, -7, 45, -93, -121, 55, 67, 31, -105, 51, 48, -102, 115, 12, 19, 3, 91, 87, 2, 124, -126, 39, -73, -37, -101, 15, 118, 72, -81, 18, -110, 86, -101, -71, -77, 95, -54, 79, -15, 61, -10, 57, 47, -11, -104, 82, -97, -40, 48, 124, -93, -100, 73, 101, 123, -73, -96, -36, -94, 108, 124, 109, 62, 126, 96, -82, 113, 58, -37, -2, 122, -123, -4, -30, -106, -94, -37, 37, -65, 31, 42, -49, 123, -119, -80, -45, 38, 124, -37, -118, 95, 54, -79, -86, -123, 109, 1, -34, -73, 22, 110, -106, 12, -36, -16, 101, -116, -65, -41, 81, -72, 18, 99, 54, 115, 55, -10, -89, 95, 71, -94, -69, -93, 7, 120, -29, -31, 96, 12, 35, 8, 100, -43, 41, -37, -64, -77, 109, -2, 66, -82, 100, -41, 78, -61, -6, -44, -32, 102, -23, -61, 81, -29, -102, 93, -96, 76, 20, 81, -70, -104, 26, -105, -111, -20, 107, -123, 113, -43, 43, 54, 3, -67, 86, -20, 21, -19, -29, 73, -12, 37, 65, 121, -76, -36, -89, -95, -101, 92, 91, -71, 105, 103, -27, -122, 119, -69, 123, -77, -75, -55, 16, -27, 79, -45, 106, 53, -44, -76, -6, -34, -80, -70, 16, -63, -56, 51, -52, -2, 77, 42, -14, -77, 100, -19, -110, 10, -68, 43, -117, -76, -35, 81, 118, -76, -43, -105, 80, 65, 41, -96, 125, 29, -46, -78, 51, -45, 70, -85, -56, -117, 13, -29, 70, -19, 68, 99, -32, -52, 53, 67, -105, -92, 4, -29, -117, -70, -37, 79, 16, 108, -77, 36, -29, 71, -102, -22, -6, -67, -108, -3, -14, 37, 82, -123, 50, 86, 88, -40, -62, -81, 82, -92, 1, 52, -76, 6, -3, -13, -32, -2, 40, 66, -16, 46, -97, -39, 7, 59, 81, -42, -3, -52, -51, 44, -104, -23, -82, -120, 75, -63, 36, 11, 13, 18, 18, -120, 17, 70, 88, -17, -42, -111, 20, 95, -58, -80, 127, -98, -4, -90, -67, 42, -87, 48, 86, -82, -67, 47, 75, -30, -8, 66, 86, 103, 30, 82, -63, 99, -47, -32, -80, 33, 35, 91, 99, -122, -16, -43, -100, -38, -49, 5, 117, 25, 17, -82, -74, 97, 52, 88, 22, -110, -16, -38, 22, -109, -77, 94, -26, -116, -62, 51, 53, 2, -34, -2, -33, -98, -75, 54, 101, -101, -41, 81, 106, -43, 35, -22, -49, 14, 121, 106, -20, -120, 54, 115, 105, 51, -5, -123, -109, -45, 92, -42, -53, -19, -102, 75, 69, -49, 68, 43, 99, 68, 76, -45, 44, 53, -117, -22, -117, -111, -5, -109, 84, 4, -29, 81, -24, 1, 50, 28, 29, 125, 103, -92, -108, 13, 4, 13, 116, 69, 113, 89, 38, 64, 85, -104, -10, -118, -68, -61, -109, -118, -122, 127, -87, 54, 43, 118, 110, -52, 54, -87, -92, -49, -41, -110, 9, -92, 82, -111, 20, 24, -77, 17, 9, 25, 117, -43, -44, 31, 66, -23, 1, 98, 45, -62, 73, -58, 53, -28, 72, -111, 59, -7, -30, -40, -84, 72, -43, 34, -50, -36, 113, 112, -105, 25, -51, -81, -55, 104, -78, 8, -3, -42, -34, 83, -45, 53, 80, -81, -7, 119, 2, 41, -101, 117, -25, -49, 46, 13, 70, 29, 124, -120, -45, 43, 74, 106, -35, -123, -38, 76, -22, 7, 96, 55, -12, 94, 15, -23, 111, 80, -72, 81, -88, 41, 82, 24, 72, -75, -85, 82, -58, 94, -48, -18, 96, -85, -15, 80, 87, -20, 102, -60, -7, -73, -116, -94, 110, 95, -126, -43, -18, 43, 71, 60, 32, 81, 5, 26, 18, 24, -60, -12, -52, 86, -57, 115, 106, -8, 61, -45, 43, -12, -83, -38, 51, 41, -32, -62, 50, -77, -126, -52, -41, -34, 113, -16, 38, 91, 47, 42, -38, -68, 127, 5, 102, 55, 36, 68, -69, -14, 8, 37, -31, -83, -81, -116, -66, 15, -19, 24, -85, -43, 107, -86, -32, -115, 54, -62, 63, -123, 63, 124, -109, -106, -61, 41, 98, 44, 105, -30, -68, -23, -16, -32, 125, -20, -126, -74, 105, -117, 94, 49, 117, -120, -32, -114, 109, -5, 2, -9, -77, -26, -75, -67, -61, -106, -81, -12, 38, 22, 46, -66, 106, 63, -83, -45, 19, -17, 40, 126, -37, -106, -12, 117, 31, -29, -53, -65, -123, -40, 124, -80, 62, 110, 64, -2, -4, -44, -37, -21, 92, 49, -91, 31, 10, -118, 111, -63, 80, -118, -66, -19, 43, 3, -68, 50, 85, -126, 93, 83, 63, 109, 21, 45, -34, -45, 62, -35, -28, 45, -38, -44, 15, 41, -119, -39, -53, 16, -90, -56, 9, 37, -37, 42, 45, 61, -115, 58, 37, -42, 7, -81, 123, -52, -42, -73, 63, 96, -64, -103, 24, -73, 38, 99, 3, 43, 86, 7, -38, 67, -29, -30, 20, 119, -87, -106, -39, -115, 110, 29, -102, 115, 11, -1, -110, -84, -118, -103, -21, -126, 54, 17, -88, -70, 48, -127, -44, 115, -12, -38, -91, -92, 105, -22, 62, -75, -76, 80, -81, -91, 5, -9, -8, -74, 34, 82, 66, -108, -41, -107, 0, 117, -89, 80, 74, 102, 99, -39, 120, -4, 70, 5, -21, 2, -30, -77, 4, 107, 113, 37, 12, -94, -96, 51, -1, 78, -127, 81, 121, -87, 20, 127, -109, -52, 52, 22, -40, -27, -66, 24, 83, 56, 117, -123, -27, 22, 58, 120, 40, 107, -100, -59, 123, 14, -71, -53, 54, 67, 98, 90, -65, -68, -64, -117, -32, -66, 81, -59, 69, -7, -103, 16, -9, 105, -89, 89, -37, 37, 16, 74, 1, -105, -72, -83, 106, 17, -110, 16, 14, 101, 57, 107, 105, -34, -85, 85, 55, -32, -75, -32, 62, 2, 110, 16, 106, 20, -81, -42, -119, -20, 124, 41, -105, 99, 126, -28, 90, 58, 110, -83, -79, 26, 99, -70, -45, 25, -67, -24, 80, -75, -38, 115, 68, 120, -37, -95, -121, -41, -89, -19, 81, -52, 102, 23, -104, 98, 109, 60, -91, -35, -112, 125, 53, 1, 22, -124, -14, 111, 85, 121, -95, -30, -45, -116, -70, 110, 40, 96, -89, -7, 120, -92, 61, 99, -51, 57, 113, 108, -101, -50, 126, -29, 123, -25, -62, -56, 25, 18, 127, 110, -30, -28, 125, 20, 71, -28, -27, 55, -87, 75, -28, -116, -46, 83, -22, 78, 70, 54, 80, -82, -120, -49, -124, 92, -60, 70, -18, -96, -117, 68, 43, 85, -75, 110, 81, -10, 107, 109, -48, 51, 42, -43, 56, -120, 23, -103, 50, -30, -122, 95, -98, 125, -46, 43, 9, -20, -121, -55, 106, 45, -71, -6, -80, 121, 121, 85, 49, -101, -37, -124, -110, 25, -56, -122, -90, -71, 84, 119, 66, 19, 97, -111, -47, 68, -30, 23, -90, -96, -96, -36, -13, 106, 97, 126, 47, -39, 40, -50, -109, 96, 116, -58, 84, 100, -30, 53, -55, -76, -120, -49, -92, -50, 25, 110, 113, -85, 2, -29, -49, -66, 27, -105, -34, -58, -33, -48, -42, -58, -16, 100, 2, 127, 33, 76, 72, -122, 126, -47, -111, -126, -115, 6, 40, 110, -124, 55, -7, 104, -127, 25, -53, 114, -72, -45, 20, -101, 43, 35, 25, -92, -20, 123, -13, -14, 7, 76, 103, 126, -1, -96, -50, -108, 17, -101, -84, 7, -77, -80, -32, 5, -21, -101, 112, -100, -82, -91, -63, -106, -119, 75, -83, -49, 87, 44, -116, -65, 111, -117, 60, 33, -25, 18, 36, 79, -119, -64, 22, -71, 40, -50, -83, 25, -63, -79, -8, 29, 118, -71, -89, 116, -119, -66, 97, -48, 34, 45, 76, 46, 86, -103, -79, -75, -39, 76, -25, -121, -64, 44, -55, 81, 125, 114, -53, 121, -13, -30, 85, -98, 106, 35, 44, -23, -111, 114, 115, 41, -78, 36, -22, 117, -1, -10, -51, -63, 30, 69, -87, -99, -2, 38, -113, 76, -118, -89, -84, -15, 15, -40, -118, 105, 63, -15, -115, 103, 11, -73, 60, -31, 46, 102, -36, -77, 113, -105, -4, 20, -110, -100, 43, -83, 83, -50, -86, 125, -101, 40, 45, -107, -9, 78, -115, 83, 28, -50, 30, -128, -92, -21, -81, 107, 102, 76, 96, -24, 40, 74, 29, -17, -121, -27, 77, -69, -54, 39, 21, 33, -72, 55, -13, -34, 90, -15, 16, -110, -55, 86, 126, 44, 57, 73, -11, -76, -49, 112, 104, -28, -34, -92, 13, -85, -30, 116, -16, -112, -3, -14, -117, -65, 79, 109, -106, 123, 61, 22, 32, 108, 36, 74, 30, -113, 43, -125, 17, 80, 92, 3, -65, -62, 119, 44, 123, -124, -118, -6, 104, 85, -65, 51, -38, 100, 48, 21, -65, -68, 63, 40, 110, -116, 58, -105, -62, -85, 74, 39, -105, 44, -3, 57, 79, -44, -31, -99, -120, -84, 30, -61, -123, -39, 107, 84, -20, -40, 10, 19, 102, 101, 67, -68, -9, -12, -113, 42, 83, 49, 74, -26, -19, 57, -116, -27, -96, -59, -73, -6, 123, 78, -43, 4, 53, 107, -115, 101, 6, -1, 103, -68, -123, 19, 115, -15, -49, -119, -35, 87, 26, 47, 106, -25, -97, -29, -16, 92, 120, 110, -70, 47, -30, 60, 116, -55, -64, 50, -112, 95, -94, 44, -118, 95, 93, -21, -128, -22, -72, 105, -91, 2, 87, 44, 124, -88, 0, 0, 24, -21, 63, 53, 45, -98, -1, 105, 90, -1, 14, 122, 39, 91, -41, 95, -95, 47, -31, 93, -49, 81, -84, 97, -96, -2, 110, 38, -10, -78, 94, -97, 9, 82, -123, 102, 103, -10, 73, -37, 5, -28, -109, 46, 121, -24, -23, -100, -42, -100, 24, -73, -95, -96, -26, 83, 17, 17, 108, -66, 107, 44, 103, -48, 76, -96, 22, -55, 6, 114, -114, -80, 9, 67, -123, -40, -9, 50, -81, 2, -121, 87, 26, -108, -18, -39, 87, 14, 126, 22, 6, 115, 61, 1, -24, 89, 91, 123, 84, 38, 43, -8, -31, -49, -108, -24, -126, -71, 51, 52, -90, -115, 92, 125, 78, 7, -112, 52, -93, -31, -2, -25, -61, 103, -54, 102, -50, 39, 40, 91, -6, 62, 63, -77, 100, 109, -79, -30, -67, 39, -113, 114, 43, -82, 81, -64, 125, 10, -95, 47, 126, -18, -84, 33, -13, 10, -102, -100, 56, 13, -55, 122, -71, 31, -69, 99, 96, -49, 17, -7, 113, 74, -116, 88, -81, -107, -52, -33, -78, -9, 5, 91, 46, -47, -72, 87, 18, 2, 60, 38, -99, -57, -113, 60, 44, 57, -94, -60, -5, -33, 117, 106, 79, 39, 47, 47, 103, -12, 77, -49, 99, -70, -116, 113, 58, -96, 86, 1, -80, -22, -74, -56, 120, 104, -9, 56, -88, 78, 58, -14, -57, -13, 13, -118, 0, -128, 122, -5, -125, -68, 110, 112, 100, 116, 123, -6, 108, -32, 57, -9, -21, 33, -117, -46, -74, -30, 92, 17, -94, 68, 16, 27, -61, 29, -100, -36, -70, 124, -53, -2, 102, -125, 10, 42, -13, 93, 97, -91, 82, -66, 101, -67, -23, 0, -45, -75, 97, -111, 17, -41, 30, -112, 81, -101, 126, -25, 87, -127, 76, 98, 109, 98, -22, -116, 107, 123, -107, 93, 74, -43, 28, 36, 20, -71, -113, 7, 53, 88, 4, -74, -49, -100, 1, -10, -34, 61, 46, -72, 4, -65, -99, -118, 57, 42, 39, -24, -81, 124, 70, 70, -50, 2, -8, -33, -110, 79, -90, -12, -45, -128, 63, -57, -33, -4, -10, -4, -71, -64, -55, 52, 75, -1, 27, -40, -102, -20, -73, 104, -1, 39, -16, 100, 106, 4, -1, 6, -12, 33, -1, -65, -47, -9, 79, -12, -55, -72, -60, -4, 27, 90, 11, -8, 55, 57, -13, 79, -8, 73, -29, -2, 14, -113, -89, -8, -101, -124, -11, 39, -4, -92, 5, 120, 126, -125, -85, -47, -1, -77, -41, -1, 92, -23, -28, -69, -7, -67, 16, 121, -122, -65, 49, -112, -95, 14, 37, -43, -15, 77, -22, -93, -93, -7, -24, -31, -13, 12, -57, 87, -1, 2, 80, 75, 7, 8, -34, -12, 116, 50, -60, 12, 0, 0, -68, 14, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, -43, 125, -99, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35, 0, 0, 0, 114, 101, 115, 112, 111, 110, 115, 101, 95, 100, 111, 99, 95, 50, 95, 50, 48, 50, 51, 49, 50, 50, 57, 95, 49, 53, 52, 54, 52, 51, 46, 100, 111, 99, 120, -115, 86, 121, 56, -108, -17, 26, 30, -116, 125, 27, 12, 99, 95, -58, 54, 118, 10, -109, 53, 36, -4, -20, 36, 91, -55, 88, -58, 18, 51, 38, -111, 61, -53, 32, 100, -103, -112, -84, 37, -111, -94, 100, 95, -77, -116, 125, 111, 16, -11, 107, -79, 101, -33, 70, -78, -124, -30, -48, -71, -50, 117, -44, -23, 116, -50, -5, 93, -49, -9, -49, 119, -35, -17, -5, -36, -9, -5, 124, -49, 115, -101, 26, -112, 1, -63, 0, 42, 42, 42, -64, 74, 112, -114, 21, -32, -60, 98, 57, -118, 75, -25, -68, -48, 62, 72, -76, -113, -67, 69, 0, 6, 121, -35, 78, -38, 31, -27, 89, 101, -34, -128, 110, -109, -91, -5, -58, 122, -50, -61, -95, 111, -43, 20, 28, -75, 74, 23, 18, -113, -118, -34, 36, 3, -58, 86, 71, 89, 51, -58, 24, 102, 30, -124, -72, -117, 14, 78, 74, -118, 69, -96, -13, -42, -4, -3, -124, -84, -97, 51, -96, -69, -73, 113, 4, 10, -5, -37, -5, 121, 96, 14, 127, -98, -8, 45, 59, -87, 38, 69, -30, 110, 74, 55, 46, 21, 126, -107, -118, -9, -22, 20, -42, 90, 97, 116, 78, -108, -44, -27, -61, 82, 25, -101, -102, 89, 112, 26, -77, 47, -93, -79, 3, 19, -44, 95, -25, 29, 46, 27, 42, 125, 65, -12, -47, -16, -91, -47, -16, 96, 88, -97, -18, 83, -84, -24, 122, -22, -56, 19, -127, -52, 37, 86, -37, 42, 46, 88, -112, -46, 65, -46, 112, -107, -87, 28, -125, -91, -60, -76, -123, 55, 113, 64, 75, -2, 44, 53, 27, 117, 116, 44, -74, 49, -63, -65, 11, 120, -89, -111, -57, 122, -10, 12, -3, 35, -40, 12, 43, 67, 95, 103, -39, 92, -109, -55, -72, 65, 57, -59, 1, 88, -86, -14, -7, 40, 34, 98, 92, 9, 45, -122, -80, 80, 64, 108, -92, -89, -89, 119, -73, -118, -51, -37, 10, -17, -103, 38, -110, 11, -89, -68, -119, -49, 115, 94, -100, 102, 35, 6, 72, 41, 11, -43, -10, 98, -124, -58, 103, 106, -45, -73, 85, -124, -38, -102, 56, 65, -69, 97, 31, 76, -77, -103, 10, -97, 53, 119, -53, 13, -49, 102, 108, 60, 80, 2, -59, 124, -11, -83, -117, 19, 107, -115, 31, 100, -102, -15, -103, 24, -112, 49, 53, -96, -92, -126, 10, 5, -124, 114, -109, 0, 0, 60, 100, 0, -128, -23, 127, 21, -105, -10, 40, -20, -67, -111, -98, -41, 101, -92, -113, -33, -49, -109, 63, -22, -109, -55, -127, 116, -20, -123, -5, 67, -32, -17, 105, -96, -61, -107, 112, -24, 102, -119, 94, 72, -104, 64, -58, 119, -4, -128, -95, -34, 99, -37, -119, 113, -2, -120, 106, 79, 77, 124, -97, -61, -100, -54, 68, -72, 115, -93, 90, 71, -49, 75, 115, -23, 71, -91, 88, -28, 72, -124, -64, 54, -77, -50, 26, -113, 42, 31, 47, -60, 15, 17, 7, -91, -52, -114, -20, 33, -95, -11, -124, 47, -117, 102, -102, 122, -28, -47, 57, -119, 63, -122, -42, -98, 97, -73, 24, 105, -84, -22, 96, 4, -105, -55, 39, -57, 44, 63, 78, -31, 54, 91, 78, 15, -54, 34, 52, 35, 76, 110, -116, 86, -41, 40, 30, 58, -73, 40, -115, -84, 68, 96, 95, -46, 26, -56, 82, -10, -85, 61, -59, -62, 123, -16, 20, -97, -69, -12, -98, 25, -111, -65, 25, 13, -54, -101, 120, -83, -1, 38, -31, 62, 111, 83, -7, -23, 85, 8, 4, 49, -113, -78, -100, 80, -68, -24, -4, -96, 64, 68, -82, -32, 48, -19, 97, 10, 51, 37, -51, 109, 11, 46, -40, -78, -34, 108, -26, -48, 64, -4, -99, 123, -122, -95, 23, -22, 15, 36, 21, -109, 29, 53, 58, 76, -106, -94, 112, 106, -5, -28, 89, -116, -57, -62, 12, -43, -98, 122, 54, 121, 68, -37, -128, -12, 79, -62, -128, -114, -62, -39, -53, -55, -44, -37, 11, 115, 93, -58, 1, -125, 57, 46, 57, -93, 68, 60, 77, -85, 44, 72, -101, 24, 113, 8, -14, -10, -86, 9, 4, -35, -111, 47, -32, -113, 16, 13, 34, 48, 82, 45, -114, 81, 100, 26, -23, 89, 46, -50, 103, -91, 4, 102, 115, -52, 125, -74, -88, -39, 59, -1, 82, 14, 9, 121, 114, -73, -95, -2, 14, 105, 79, -12, -48, 80, -59, -35, -92, -3, 2, -27, 94, 99, 47, -8, 85, 61, 1, 71, -57, 91, 54, -87, -108, -77, -106, -125, -3, -97, -127, -72, -43, -8, -15, -103, -6, 126, -117, 52, 49, 33, -81, -38, -10, -51, 72, 89, -93, -63, 105, -91, -73, -9, 116, 29, -33, -62, 7, 72, 48, -56, 124, -90, 46, -15, -101, -31, -26, -59, -22, -99, 29, 54, 109, -25, -75, 118, -122, -64, -7, -20, 104, 43, -14, -61, -58, -120, 7, -40, 3, -64, 49, 33, 69, 52, 86, 32, -27, 40, -35, 90, -64, -97, 8, 49, -99, 36, -28, -28, -27, -115, 60, 102, -124, -62, 125, -44, 111, -105, 61, -66, -17, -103, -90, 28, -59, -114, 7, -12, 40, -120, 25, 27, -80, -125, 92, 34, -50, 79, -128, -29, -67, 99, 86, -92, -48, -69, -83, 85, -93, 101, 91, -51, 70, -125, -115, 28, 37, -61, 38, -17, 32, 118, -54, -115, -60, -63, 29, 29, 43, 121, -109, -45, -6, -90, 6, -113, 2, 63, 90, 110, 62, -4, 91, 120, 62, -11, 43, 127, 37, 51, 118, -56, -38, 12, -75, 80, 45, 93, 48, 59, 124, -26, -125, -118, -45, 80, 20, -81, 90, 44, -25, 106, 93, 37, -21, -86, 86, 41, 119, 75, 31, -125, -18, -44, -120, -34, 2, 123, 19, 59, 60, 14, -12, -94, -124, 92, 98, -90, -40, -115, -55, 58, 45, -89, 53, 70, 19, -58, 4, -20, 111, 109, 47, -47, 9, -76, 16, -81, 19, 95, -51, -30, 98, 11, 79, 14, 35, 75, 124, -126, -67, -91, 58, 48, 117, -117, 126, 65, -25, -112, -40, -110, -4, 108, 6, -65, 35, -95, 96, 116, 65, -103, -107, 22, 2, -17, -99, 90, -36, -98, -69, 105, -93, -66, -72, -11, -51, 55, -74, 82, 58, -23, -86, 52, 79, 92, 88, -100, 54, 9, 35, -97, -94, -30, 70, -114, 42, -37, 61, -85, -127, -60, 49, 73, -89, -13, -55, 21, -111, -88, -52, -107, 120, 8, -41, -96, -15, 125, -125, -81, 10, 103, 105, -101, 7, 59, 71, 33, 101, 56, -122, -98, -125, -75, -64, -71, -79, 121, -26, -125, -41, -105, 67, 73, -113, 69, 116, -63, 99, 2, 41, -114, 126, -105, 82, -110, -1, 37, -94, -97, -105, -73, -77, -52, -111, -110, -66, -88, -93, -122, -12, -93, 19, 89, -67, 55, 127, -81, -61, -34, 68, 52, -100, 16, -8, 100, -32, -62, 57, 116, -59, 71, -103, 14, -41, -96, -82, -71, 15, 0, 127, -120, -52, 120, -21, -30, 105, -5, 78, -123, 35, 24, -9, 10, -6, 53, 82, 106, -99, -124, 78, 26, -49, 12, 36, -85, 14, 38, -76, 105, 55, -40, -38, -51, -78, -18, -67, -80, -92, 114, 72, 1, 82, -100, 106, 99, 127, -31, -73, 117, 56, 113, -72, -70, -61, 39, 127, -72, -60, 55, -15, 30, 18, 26, -124, 125, 56, 26, 22, -118, -1, -14, -87, -49, -26, 21, -19, -117, 80, -91, -46, -14, -91, -48, -58, -55, -35, -17, 53, -10, -95, 95, 59, -66, 92, -3, -68, 79, -100, -125, -49, 89, -110, -10, -123, -18, -66, 60, -40, -126, -84, 71, -98, -107, -81, 41, -101, 12, -88, 104, 106, 82, -20, -70, -10, 112, 22, 126, 101, -62, 124, 1, -119, 24, 88, -66, -43, 120, -106, 76, 115, 98, 88, 89, 18, -5, -94, 46, 65, 3, -125, -108, 98, -73, -34, -114, -42, 66, 16, 118, -46, -10, -35, 111, 108, -69, 14, -42, 84, 46, -19, 72, 70, -12, -100, 37, -107, 56, 28, 62, -12, -40, 20, -44, 59, 59, 6, 113, 117, -63, -100, 35, 116, 61, -51, -56, 8, 72, 44, -103, -22, -102, -27, 119, 93, -67, -74, -42, -111, 103, -109, 60, -32, -14, 119, -9, -3, 59, 95, 58, 11, 29, -94, -30, -63, 33, -104, -88, 104, -43, 94, 20, -117, 20, -70, -14, 66, -32, 11, -20, -76, -72, 26, 1, -107, -11, -103, 91, -27, -48, 61, 93, -89, 23, -41, -34, -80, 29, -16, 52, 33, -123, 28, -116, 98, 50, 18, 74, -112, -41, 119, -58, 60, 77, -108, -95, -15, 39, -16, 91, 65, 30, -73, 127, -6, 50, -112, -12, 109, 14, -101, -101, -21, 73, 127, 113, -103, 1, 28, -100, 1, -43, -41, 36, 34, 9, 14, 70, -60, 42, 76, 8, 85, 83, -103, -113, 86, -75, -50, -92, 47, -77, 27, -102, 43, 44, -49, -49, -35, 46, 101, -56, 33, -102, -29, 91, -67, 83, -74, 26, -66, -125, -87, 86, -69, 71, -103, -77, 8, -35, 53, -39, -17, -42, 93, 95, -67, -93, -31, 10, -66, 108, 44, 63, 113, 47, -125, -87, -109, -125, 95, 99, -56, 35, -92, -78, -115, -5, -95, 15, -72, -48, -8, 105, -61, -100, -70, -65, 115, 98, 124, 48, 87, 73, -33, 116, -43, -85, -5, 10, -30, 76, 66, 58, -101, -29, -44, 104, 56, -31, 74, -84, -37, -59, -36, 52, -104, 110, 39, 63, -59, 37, -8, 122, 17, -35, 105, 85, -28, -23, -126, 34, -73, 6, -61, 7, -49, -73, 98, 63, 92, 91, 55, 92, 89, 106, -28, 105, -76, -62, -69, -38, -67, 110, 6, 8, -70, -88, 50, 0, -12, -66, 1, -123, -33, -61, -20, -100, 111, 13, -7, -46, 34, 76, -84, 91, -56, -15, -35, -99, -60, 79, -101, -79, -103, 78, 115, 127, 89, -55, 29, -116, -8, 40, 120, -48, 26, -108, 44, 124, 7, 98, -6, 107, 11, -81, 65, -22, 53, -88, 27, -128, -67, 105, 29, -62, 23, -40, -103, 29, -3, -19, -65, 117, -33, -118, 85, 21, -15, -58, 114, -21, 106, 72, 105, 47, 78, 123, -89, 29, -72, -55, 117, 85, 35, -36, -23, 110, -21, -88, 121, -6, 48, -57, 59, 85, 4, 71, -51, -10, -119, -70, -125, 91, 56, 46, 102, -100, -110, -87, 18, 0, -120, 36, 5, 125, -95, 30, 76, -33, -75, -53, -125, -127, -46, -27, 44, 6, 62, 122, -24, -70, -80, -108, -53, 109, -52, 51, 64, -74, 11, -12, 80, 65, 1, -16, -87, 116, 85, -104, -96, -46, 91, -108, 82, -41, 99, -19, -84, -10, 2, -119, -24, 1, -77, 103, 28, 99, -90, -14, -40, 118, -55, -76, -85, -43, -23, -60, -42, 54, -22, -15, -103, 101, 107, -48, 34, 57, 21, 52, -51, -40, -127, 118, 37, -67, 64, 122, -16, 53, 97, 106, -41, -55, -69, 95, 83, -47, -73, 102, -83, 56, -73, -76, 90, 7, 83, 54, 3, -21, 119, 60, 93, -92, -106, 63, -57, -77, 56, -110, -97, -4, 110, 45, -85, 57, -124, 16, 72, 99, 30, -79, 58, -18, 108, 12, -20, -95, -25, 52, 63, 39, -78, -15, -80, -19, -116, 10, 86, -123, -78, 52, -78, -120, -36, 97, 36, -97, 20, 119, 1, -102, 89, -19, -11, -96, 108, 5, 123, -19, -78, -57, -57, 43, -7, 85, -56, 108, 94, 1, -77, -80, -74, -55, 86, -59, -27, -28, -87, 121, -70, 97, -78, -98, 1, -103, 116, -28, 30, -126, 34, 3, 87, 104, 84, 54, 65, 84, 112, -12, 120, -32, -96, -110, -120, -37, 100, -61, -71, 111, -80, -102, 82, 75, 93, 47, -71, -124, 72, 82, 41, 32, -116, -79, 73, 4, 127, 47, 14, -86, -38, -88, -93, -7, -118, 12, -63, -68, 50, -1, -21, 67, 1, -8, 30, 107, 118, 31, -45, -128, -79, 102, 26, -52, -104, 55, 44, -81, 44, 53, -52, -33, -115, 111, 49, 85, 44, -55, 114, 111, 58, 48, 123, -116, -58, 40, 82, 75, -81, 25, -32, 55, 6, 17, 44, -50, -99, 99, -93, -9, 46, -59, -18, 8, 23, -75, 58, 114, -61, 25, -36, 42, -111, 29, -63, -94, -90, -99, 44, 33, 4, 121, -3, -79, 22, 17, -74, -72, 78, 0, 80, -86, -76, -32, -111, -19, -27, -107, 115, 110, 73, 37, -89, 89, -62, -107, -44, -90, 119, 31, -107, -61, -10, 45, -51, -108, -50, 3, -64, 49, -114, 13, 126, 121, -27, 11, -33, 92, 66, -94, -58, -100, -69, 121, -123, 87, 44, -123, 91, 20, 119, 50, 103, 54, 56, -87, 93, -21, 57, -49, 13, -47, -98, -106, 89, 22, -92, 6, -55, 81, 124, 80, -32, 94, 64, -22, -117, 6, 115, -14, -83, -29, 76, -32, -72, -74, 21, -74, 73, 26, 92, 102, 69, -96, 4, -79, -14, -119, -88, 47, 88, 3, 33, 35, 60, -50, 78, 85, 31, -8, -124, -79, 55, -116, 117, -35, 97, -54, -106, 88, -104, -69, 54, -94, -126, -13, 127, -14, 113, 114, -108, -114, -104, 62, -53, 24, 93, 52, 100, 88, 99, -53, 100, 77, 8, 18, 79, 64, 65, -109, -29, -12, -12, -21, 22, -43, 55, 99, 36, -100, -73, 90, 75, -98, -5, -119, -118, 88, -118, 104, -60, -54, 74, -14, 47, 122, -74, -18, -112, 53, -16, 113, 36, 9, 88, 84, 80, 79, -115, 78, -122, -87, 119, -101, 79, 63, -17, 109, -99, -66, 53, -59, -84, -21, -83, -89, -74, -89, -68, 48, 111, 10, 42, -16, -42, -41, -84, 116, -73, 41, -62, -25, -92, 5, 104, 101, -59, -87, -25, 93, 126, -12, 37, -94, -25, 13, -128, -85, -41, 39, 86, 4, -49, 119, 64, 0, 104, -71, -51, -94, 10, 49, -52, -61, 22, -102, -17, -10, 69, 7, -37, -73, 17, 45, -15, -48, 59, 55, -100, -7, -87, 30, -5, 70, 99, -23, 25, 59, -81, 81, 28, -96, 37, -13, 69, 69, -40, -32, -106, -17, 16, 15, 75, -29, 107, 48, -107, -69, 84, 2, -78, -31, 117, 30, 77, 78, 57, -12, -73, 19, -83, -58, 22, -52, -86, -36, -45, -16, -10, -9, 97, 82, -82, -2, 57, -36, -7, -71, -44, 113, 114, -96, 24, -114, 87, -72, 79, 111, 35, 53, 86, 82, 121, -17, 105, -16, -61, 56, -93, -42, -120, -122, 103, -47, 25, 103, -100, -28, 115, 56, 116, 85, 82, 114, 98, 42, -82, -92, -99, 89, 110, -116, 109, 8, -72, 61, -115, -98, 32, -80, 29, 82, 30, 119, -41, -69, -42, -38, 64, 62, 114, 0, 96, -116, -2, 79, -35, -107, -5, 95, -35, -11, -97, -114, -28, 100, -113, -3, -31, 78, 18, 94, 13, 28, -51, 95, 58, -54, 117, 43, -79, -70, 6, 99, 70, 104, 57, 26, -62, 116, -29, -18, 46, -96, -96, 79, 29, 99, 100, -64, 114, 126, 98, -4, 10, -112, -110, 87, 85, 68, -96, 57, -44, 92, -63, -92, -7, 9, -91, -56, 125, 50, -114, -73, 108, -62, 48, 33, -56, 94, -122, 14, -39, -101, -75, -105, 74, 97, -114, 101, -81, -33, 11, -125, 56, 115, 1, 70, 118, 118, -104, -78, 100, -72, 127, -90, 96, -79, 33, -120, 43, 93, 123, -38, -52, -29, 6, 75, 96, -33, -7, 24, -67, -128, 83, -111, 51, -49, 103, 78, 37, 40, -37, -6, 85, 8, 46, -39, -39, -84, -7, -18, 41, 34, 80, 69, -43, 112, -36, -69, -101, -76, 69, 21, -18, -38, 114, 45, -80, -28, -92, 105, 104, 86, -35, 126, -36, 87, 19, 71, -10, -24, -65, -89, -60, 106, 27, 116, -109, -7, -16, 123, -97, 34, 74, 36, 26, -9, -118, 111, -110, 29, -109, -50, -25, -77, 56, 44, 62, -94, -60, -13, -1, -115, -108, -21, 72, 31, 31, 119, -76, -21, -11, 99, -70, -12, -73, 13, 24, 90, -7, 65, 26, 59, 34, -29, -31, -3, -29, 12, -11, -78, -47, -101, 21, 95, -128, -127, 0, -83, -82, -76, -4, 126, 80, 116, 76, -41, -67, -39, 32, 25, -81, -53, 55, 23, 101, -19, -59, 57, -93, 68, 107, 25, -40, -24, -82, -31, 20, 54, 20, -15, -5, 91, 47, 85, 17, 25, -81, 10, -53, -108, 10, 108, 27, 46, -114, 48, 90, -66, 17, 121, -21, 49, -64, 96, -42, 102, -36, -77, -52, -97, 81, 91, -109, -108, 58, -29, -47, 85, -18, -112, 82, 62, 7, 13, -73, -40, -49, 100, 120, 105, 19, -44, 53, 35, 72, 54, 24, 122, -100, 112, 113, -26, 78, -86, -9, 81, 58, -63, 63, -116, 4, 9, 41, 24, -16, -17, -108, 79, -38, 73, 22, -64, -81, -21, 55, -2, -4, -41, 13, 78, -38, 46, -38, -97, -64, 118, 36, 63, 121, -48, 95, -127, 39, -19, 13, -24, 39, -32, 13, -46, -1, -12, 104, -65, -94, 79, -50, 117, -90, -97, -48, -70, 100, -65, 49, 68, -65, -62, 79, 22, -18, -49, -16, 120, -32, 111, -84, -64, -81, -16, -109, 37, -64, -3, 19, 124, -119, -6, -49, -75, -2, -21, 78, 39, -17, -26, -25, 68, 38, 104, 126, 83, 64, -90, 6, -28, 20, -57, 31, 41, -113, -98, -26, -93, -61, 113, 63, 36, -1, 7, 80, 75, 7, 8, 1, -39, -8, 38, 100, 11, 0, 0, 101, 13, 0, 0, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, -43, 125, -99, 87, -34, -12, 116, 50, -60, 12, 0, 0, -68, 14, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 114, 101, 115, 112, 111, 110, 115, 101, 95, 100, 111, 99, 95, 49, 95, 50, 48, 50, 51, 49, 50, 50, 57, 95, 49, 53, 52, 54, 52, 51, 46, 100, 111, 99, 120, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, -43, 125, -99, 87, 1, -39, -8, 38, 100, 11, 0, 0, 101, 13, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 13, 0, 0, 114, 101, 115, 112, 111, 110, 115, 101, 95, 100, 111, 99, 95, 50, 95, 50, 48, 50, 51, 49, 50, 50, 57, 95, 49, 53, 52, 54, 52, 51, 46, 100, 111, 99, 120, 80, 75, 5, 6, 0, 0, 0, 0, 2, 0, 2, 0, -94, 0, 0, 0, -54, 24, 0, 0, 0, 0}]
[2023-12-29 at 15:46:43 CST] [TRACE] org.springframework.web.servlet.support.WebContentGenerator.prepareResponse(WebContentGenerator.java:405) - Applying default cacheSeconds=-1
[2023-12-29 at 15:46:43 CST] [TRACE] org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1174) - No view rendering, null ModelAndView returned.
[2023-12-29 at 15:46:43 CST] [DEBUG] org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1135) - Exiting from "ASYNC" dispatch, status 200, headers={masked}
[2023-12-29 at 15:46:43 CST] [TRACE] org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:105) - Cleared thread-bound request context: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@52f11955
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Firing onComplete() event for any AsyncListeners
[2023-12-29 at 15:46:43 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:175) - Req: 5e4a3a83  CReq: 6cf47fce  RP: 3f0cf715  Stage: 3  Thread: http-nio-8080-exec-8  State:                  N/A  Method: recycle      URI: /chat/upload
org.apache.catalina.core.AsyncContextImpl$DebugException: null
	at org.apache.catalina.core.AsyncContextImpl.logDebug(AsyncContextImpl.java:497) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.AsyncContextImpl.recycle(AsyncContextImpl.java:274) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.connector.Request.recycle(Request.java:501) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:290) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:243) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:57) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Socket: [org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper@1aaae292:org.apache.tomcat.util.net.NioChannel@1b3a38fb:java.nio.channels.SocketChannel[connected local=/127.0.0.1:8080 remote=/127.0.0.1:7537]], Status in: [OPEN_READ], State out: [OPEN]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Before fill(): parsingHeader: [true], parsingRequestLine: [true], parsingRequestLinePhase: [0], parsingRequestLineStart: [0], byteBuffer.position(): [0], byteBuffer.limit(): [0], end: [796]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Socket: [org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper@1aaae292:org.apache.tomcat.util.net.NioChannel@1b3a38fb:java.nio.channels.SocketChannel[connected local=/127.0.0.1:8080 remote=/127.0.0.1:7537]], Read from buffer: [0]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Socket: [org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper@1aaae292:org.apache.tomcat.util.net.NioChannel@1b3a38fb:java.nio.channels.SocketChannel[connected local=/127.0.0.1:8080 remote=/127.0.0.1:7537]], Read direct from socket: [0]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Received []
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Socket: [org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper@1aaae292:org.apache.tomcat.util.net.NioChannel@1b3a38fb:java.nio.channels.SocketChannel[connected local=/127.0.0.1:8080 remote=/127.0.0.1:7537]], Status in: [OPEN_READ], State out: [OPEN]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Pushed Processor [org.apache.coyote.http11.Http11Processor@26f76b0b]
[2023-12-29 at 15:46:43 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Registered read interest for [org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper@1aaae292:org.apache.tomcat.util.net.NioChannel@1b3a38fb:java.nio.channels.SocketChannel[connected local=/127.0.0.1:8080 remote=/127.0.0.1:7537]]
[2023-12-29 at 15:46:44 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836004979; nextExpiration=1703836004739; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:45 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836005985; nextExpiration=1703836005979; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:46 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836006990; nextExpiration=1703836006985; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:47 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836007997; nextExpiration=1703836007990; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:48 CST] [DEBUG] reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259) - [9fc4635d, L:/127.0.0.1:8396 ! R:/127.0.0.1:7861] onStateChange(PooledConnection{channel=[id: 0x9fc4635d, L:/127.0.0.1:8396 ! R:/127.0.0.1:7861]}, [disconnecting])
[2023-12-29 at 15:46:49 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836009003; nextExpiration=1703836008997; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:50 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836010010; nextExpiration=1703836010003; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:51 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836011016; nextExpiration=1703836011010; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:52 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836012022; nextExpiration=1703836012016; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:53 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836013029; nextExpiration=1703836013022; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:54 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836014036; nextExpiration=1703836014029; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:55 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836015053; nextExpiration=1703836015036; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:56 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836016053; nextExpiration=1703836016053; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:57 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836017056; nextExpiration=1703836017053; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:58 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836018066; nextExpiration=1703836018056; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:46:59 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836019079; nextExpiration=1703836019066; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:00 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836020082; nextExpiration=1703836020079; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:01 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836021087; nextExpiration=1703836021082; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:02 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836022097; nextExpiration=1703836022087; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:03 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836023112; nextExpiration=1703836023097; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:04 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836024116; nextExpiration=1703836024112; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:05 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836025116; nextExpiration=1703836025116; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:06 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836026118; nextExpiration=1703836026116; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:07 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836027124; nextExpiration=1703836027118; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:08 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836028128; nextExpiration=1703836028124; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:09 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836029128; nextExpiration=1703836029128; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:10 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836030133; nextExpiration=1703836030128; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:11 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836031147; nextExpiration=1703836031133; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:12 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836032156; nextExpiration=1703836032147; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:13 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836033157; nextExpiration=1703836033156; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:13 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Start expire sessions StandardManager at 1703836033906 sessioncount 0
[2023-12-29 at 15:47:13 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - End expire sessions StandardManager processingTime 0 expired sessions: 0
[2023-12-29 at 15:47:14 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836034161; nextExpiration=1703836034157; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:15 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836035162; nextExpiration=1703836035161; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:16 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836036164; nextExpiration=1703836036162; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:17 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836037170; nextExpiration=1703836037164; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:18 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836038174; nextExpiration=1703836038170; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:19 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836039180; nextExpiration=1703836039174; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:20 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836040181; nextExpiration=1703836040180; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:21 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836041189; nextExpiration=1703836041181; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:22 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836042210; nextExpiration=1703836042189; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:23 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836043222; nextExpiration=1703836043210; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:24 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836044224; nextExpiration=1703836044222; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:25 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836045231; nextExpiration=1703836045224; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:26 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836046232; nextExpiration=1703836046231; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:27 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836047232; nextExpiration=1703836047232; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:28 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836048240; nextExpiration=1703836048232; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:29 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836049242; nextExpiration=1703836049240; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:30 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836050245; nextExpiration=1703836050242; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:31 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836051260; nextExpiration=1703836051245; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:32 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836052261; nextExpiration=1703836052260; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:33 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836053264; nextExpiration=1703836053261; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:34 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836054265; nextExpiration=1703836054264; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:35 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836055274; nextExpiration=1703836055265; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:36 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836056282; nextExpiration=1703836056274; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:37 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836057285; nextExpiration=1703836057282; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:38 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836058296; nextExpiration=1703836058285; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:39 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836059305; nextExpiration=1703836059296; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:40 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836060308; nextExpiration=1703836060305; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:41 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836061322; nextExpiration=1703836061308; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:42 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836062334; nextExpiration=1703836062322; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:43 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836063342; nextExpiration=1703836063334; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:44 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=1; now=1703836064351; nextExpiration=1703836064342; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:44 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Processing socket [org.apache.tomcat.util.net.NioChannel@1b3a38fb:java.nio.channels.SocketChannel[connected local=/127.0.0.1:8080 remote=/127.0.0.1:7537]] with status [ERROR]
[2023-12-29 at 15:47:44 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Found processor [null] for socket [org.apache.tomcat.util.net.NioChannel@1b3a38fb:java.nio.channels.SocketChannel[connected local=/127.0.0.1:8080 remote=/127.0.0.1:7537]]
[2023-12-29 at 15:47:44 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Counting down[http-nio-8080-exec-7] latch=1
[2023-12-29 at 15:47:44 CST] [DEBUG] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Calling [org.apache.tomcat.util.net.NioEndpoint@56cd469d].closeSocket([org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper@1aaae292:org.apache.tomcat.util.net.NioChannel@1b3a38fb:java.nio.channels.SocketChannel[connected local=/127.0.0.1:8080 remote=/127.0.0.1:7537]])
[2023-12-29 at 15:47:45 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=0; now=1703836065363; nextExpiration=1703836065351; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:46 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=0; now=1703836066368; nextExpiration=1703836066363; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:47 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=0; now=1703836067369; nextExpiration=1703836067368; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:48 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=0; now=1703836068375; nextExpiration=1703836068369; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:49 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=0; now=1703836069380; nextExpiration=1703836069375; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:50 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=0; now=1703836070381; nextExpiration=1703836070380; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:51 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=0; now=1703836071401; nextExpiration=1703836071381; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:52 CST] [TRACE] org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - timeout completed: keys processed=0; now=1703836072413; nextExpiration=1703836072401; keyCount=0; hasEvents=false; eval=false
[2023-12-29 at 15:47:52 CST] [DEBUG] java.logging/sun.util.logging.internal.LoggingProviderImpl$JULWrapper.log(LoggingProviderImpl.java:257) - Runtime.exit() called with status: 130
java.lang.Throwable: Runtime.exit(130)
	at java.base/java.lang.Shutdown.logRuntimeExit(Shutdown.java:179) ~[?:?]
	at java.base/java.lang.Shutdown.exit(Shutdown.java:160) ~[?:?]
	at java.base/java.lang.Terminator$1.handle(Terminator.java:51) ~[?:?]
	at java.base/jdk.internal.misc.Signal$1.run(Signal.java:218) ~[?:?]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2023-12-29 at 15:47:52 CST] [DEBUG] org.springframework.boot.availability.ApplicationAvailabilityBean.onApplicationEvent(ApplicationAvailabilityBean.java:77) - Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
[2023-12-29 at 15:47:52 CST] [DEBUG] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1064) - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f86099a, started on Fri Dec 29 15:27:11 CST 2023
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255) - Returning cached instance of singleton bean 'applicationTaskExecutor'
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255) - Returning cached instance of singleton bean 'springApplicationAdminRegistrar'
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255) - Returning cached instance of singleton bean 'taskScheduler'
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255) - Returning cached instance of singleton bean 'applicationTaskExecutor'
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255) - Returning cached instance of singleton bean 'redisConnectionFactory'
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255) - Returning cached instance of singleton bean 'taskScheduler'
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255) - Returning cached instance of singleton bean 'reactorResourceFactory'
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255) - Returning cached instance of singleton bean 'springBootLoggingLifecycle'
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255) - Returning cached instance of singleton bean 'webServerGracefulShutdown'
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:255) - Returning cached instance of singleton bean 'webServerStartStop'
[2023-12-29 at 15:47:52 CST] [DEBUG] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:476) - Stopping beans in phase 2147483647
[2023-12-29 at 15:47:52 CST] [DEBUG] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:476) - Stopping beans in phase 2147482623
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:340) - Asking bean 'webServerGracefulShutdown' of type [org.springframework.boot.web.context.WebServerGracefulShutdownLifecycle] to stop
[2023-12-29 at 15:47:52 CST] [DEBUG] org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$4(DefaultLifecycleProcessor.java:348) - Bean 'webServerGracefulShutdown' completed its stop procedure
[2023-12-29 at 15:47:52 CST] [DEBUG] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:476) - Stopping beans in phase 2147481599
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:340) - Asking bean 'webServerStartStop' of type [org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle] to stop
[2023-12-29 at 15:47:52 CST] [DEBUG] org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$4(DefaultLifecycleProcessor.java:348) - Bean 'webServerStartStop' completed its stop procedure
[2023-12-29 at 15:47:52 CST] [DEBUG] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:476) - Stopping beans in phase 0
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:340) - Asking bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] to stop
[2023-12-29 at 15:47:52 CST] [DEBUG] io.lettuce.core.RedisChannelHandler.closeAsync(RedisChannelHandler.java:168) - closeAsync()
[2023-12-29 at 15:47:52 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.closeAsync(DefaultEndpoint.java:590) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] closeAsync()
[2023-12-29 at 15:47:52 CST] [DEBUG] io.lettuce.core.AbstractRedisClient.shutdownAsync(AbstractRedisClient.java:564) - Initiate shutdown (100, 100, MILLISECONDS)
[2023-12-29 at 15:47:52 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:344) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] channelInactive()
[2023-12-29 at 15:47:52 CST] [DEBUG] io.lettuce.core.resource.DefaultEventLoopGroupProvider.doRelease(DefaultEventLoopGroupProvider.java:281) - Release executor io.netty.channel.nio.NioEventLoopGroup@37339874
[2023-12-29 at 15:47:52 CST] [DEBUG] io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelInactive$4(DefaultEndpoint.java:504) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1] deactivating endpoint handler
[2023-12-29 at 15:47:52 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:368) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] channelInactive() done
[2023-12-29 at 15:47:52 CST] [DEBUG] io.lettuce.core.protocol.ConnectionWatchdog.channelInactive(ConnectionWatchdog.java:196) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] channelInactive()
[2023-12-29 at 15:47:52 CST] [DEBUG] io.lettuce.core.protocol.ConnectionWatchdog.channelInactive(ConnectionWatchdog.java:207) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] Reconnect scheduling disabled
[2023-12-29 at 15:47:52 CST] [DEBUG] io.lettuce.core.protocol.CommandHandler.channelUnregistered(CommandHandler.java:227) - [channel=0x52752cf3, /127.0.0.1:8094 -> localhost/127.0.0.1:6379, epid=0x1, chid=0x1] channelUnregistered()
[2023-12-29 at 15:47:52 CST] [DEBUG] io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:221) - Freed 15 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
[2023-12-29 at 15:47:52 CST] [DEBUG] org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$4(DefaultLifecycleProcessor.java:348) - Bean 'redisConnectionFactory' completed its stop procedure
[2023-12-29 at 15:47:52 CST] [TRACE] org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:354) - Stopping bean 'reactorResourceFactory' of type [org.springframework.http.client.ReactorResourceFactory]
[2023-12-29 at 15:47:54 CST] [DEBUG] io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:221) - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-14
[2023-12-29 at 15:47:54 CST] [DEBUG] io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:221) - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-11
[2023-12-29 at 15:47:54 CST] [DEBUG] io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:221) - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-5
[2023-12-29 at 15:47:54 CST] [DEBUG] io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:221) - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-8
[2023-12-29 at 15:47:54 CST] [DEBUG] io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:221) - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-7
[2023-12-29 at 15:47:54 CST] [DEBUG] io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:221) - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-13
[2023-12-29 at 15:47:54 CST] [DEBUG] io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:221) - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-12
[2023-12-29 at 15:47:54 CST] [DEBUG] io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:221) - Freed 4 thread-local buffer(s) from thread: reactor-http-nio-10
[2023-12-29 at 15:47:54 CST] [DEBUG] io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:221) - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-9
[2023-12-29 at 15:47:54 CST] [DEBUG] io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:221) - Freed 6 thread-local buffer(s) from thread: reactor-http-nio-3
[2023-12-29 at 15:47:54 CST] [DEBUG] io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:221) - Freed 7 thread-local buffer(s) from thread: reactor-http-nio-4
[2023-12-29 at 15:47:54 CST] [DEBUG] io.netty.buffer.PoolThreadCache.free(PoolThreadCache.java:221) - Freed 5 thread-local buffer(s) from thread: reactor-http-nio-6
[2023-12-29 at 15:47:54 CST] [DEBUG] org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:359) - Successfully stopped bean 'reactorResourceFactory'
[2023-12-29 at 15:47:54 CST] [DEBUG] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:476) - Stopping beans in phase -2147483647
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:340) - Asking bean 'springBootLoggingLifecycle' of type [org.springframework.boot.context.logging.LoggingApplicationListener$Lifecycle] to stop
[2023-12-29 at 15:47:54 CST] [DEBUG] org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$4(DefaultLifecycleProcessor.java:348) - Bean 'springBootLoggingLifecycle' completed its stop procedure
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:509) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17d2ed1b: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,springboot01Application,org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory,batchProcessor,chatController,batchServiceImpl,chatServiceImpl,fileUtil,requestUtil,org.springframework.scheduling.annotation.SchedulingConfiguration,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.cache.annotation.ProxyCachingConfiguration,org.springframework.cache.config.internalCacheAdvisor,cacheOperationSource,cacheInterceptor,org.springframework.boot.autoconfigure.AutoConfigurationPackages,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,propertySourcesPlaceholderConfigurer,org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration,fileWatcher,sslPropertiesSslBundleRegistrar,sslBundleRegistry,org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor,org.springframework.boot.context.internalConfigurationPropertiesBinder,org.springframework.boot.context.properties.BoundConfigurationProperties,org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter,spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties,org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration,websocketServletWebServerCustomizer,org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat,tomcatServletWebServerFactory,org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration,servletWebServerFactoryCustomizer,tomcatServletWebServerFactoryCustomizer,server-org.springframework.boot.autoconfigure.web.ServerProperties,webServerFactoryCustomizerBeanPostProcessor,errorPageRegistrarBeanPostProcessor,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration,dispatcherServlet,spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration,dispatcherServletRegistration,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration,standardJacksonObjectMapperBuilderCustomizer,spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration,jacksonObjectMapperBuilder,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration,parameterNamesModule,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration,jacksonObjectMapper,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration,jsonMixinModuleEntries,jsonMixinModule,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,jsonComponentModule,org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration,defaultCodecCustomizer,org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration,jacksonCodecCustomizer,org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration,spring.codec-org.springframework.boot.autoconfigure.codec.CodecProperties,org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration,threadPoolTaskExecutorBuilder,org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration,taskExecutorBuilder,org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration,simpleAsyncTaskExecutorBuilder,org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration,applicationTaskExecutor,org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration,error,beanNameViewResolver,org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration,conventionErrorViewResolver,spring.web-org.springframework.boot.autoconfigure.web.WebProperties,org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration,errorAttributes,basicErrorController,errorPageCustomizer,preserveErrorControllerTargetClassPostProcessor,org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration,welcomePageHandlerMapping,welcomePageNotAcceptableHandlerMapping,localeResolver,themeResolver,flashMapManager,mvcConversionService,mvcValidator,mvcContentNegotiationManager,requestMappingHandlerMapping,mvcPatternParser,mvcUrlPathHelper,mvcPathMatcher,viewControllerHandlerMapping,beanNameHandlerMapping,routerFunctionMapping,resourceHandlerMapping,mvcResourceUrlProvider,defaultServletHandlerMapping,requestMappingHandlerAdapter,handlerFunctionAdapter,mvcUriComponentsContributor,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,mvcViewResolver,mvcHandlerMappingIntrospector,viewNameTranslator,org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter,defaultViewResolver,viewResolver,requestContextFilter,org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration,resourceHandlerRegistrationCustomizer,org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration,formContentFilter,org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice,org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration,webFluxSupportConverter,org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider,springDataWebPropertiesProvider,org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration,webConversionServiceProvider,org.springdoc.core.configuration.SpringDocConfiguration,localSpringDocParameterNameDiscoverer,additionalModelsConverter,fileSupportConverter,responseSupportConverter,schemaPropertyDeprecatingConverter,polymorphicModelConverter,openAPIBuilder,modelConverterRegistrar,operationBuilder,propertyResolverUtils,requestBodyBuilder,securityParser,genericReturnTypeParser,parameterBuilder,springDocProviders,objectMapperProvider,org.springdoc.core.configuration.SpringDocPageableConfiguration,pageableOpenAPIConverter,delegatingMethodParameterCustomizer,org.springdoc.core.configuration.SpringDocSortConfiguration,sortOpenAPIConverter,org.springdoc.core.properties.SpringDocConfigProperties,org.springdoc.core.properties.SwaggerUiConfigParameters,org.springdoc.core.properties.SwaggerUiConfigProperties,org.springdoc.core.properties.SwaggerUiOAuthProperties,org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration,routerFunctionProvider,org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration,openApiResource,requestBuilder,springWebProvider,responseBuilder,org.springdoc.webmvc.ui.SwaggerConfig,swaggerWelcome,swaggerConfigResource,indexPageTransformer,swaggerWebMvcConfigurer,org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,mbeanExporter,objectNamingStrategy,mbeanServer,spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties,org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,springApplicationAdminRegistrar,org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration,forceAutoProxyCreatorToUseClassProxying,org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration,applicationAvailability,org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration,platformTransactionManagerCustomizers,transactionExecutionListeners,spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties,org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration,lettuceClientResources,redisConnectionFactory,org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,redisConnectionDetails,redisTemplate,stringRedisTemplate,spring.data.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties,java.lang.Object,org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration,cacheManager,org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,cacheManagerCustomizers,cacheAutoConfigurationValidator,spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties,org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration,lifecycleProcessor,spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties,org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,persistenceExceptionTranslationPostProcessor,org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration,reactiveRedisTemplate,reactiveStringRedisTemplate,org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,redisIndexConfiguration#0,redisKeyspaceConfiguration#0,redisMappingConfiguration#0,keyValueMappingContext,redisCustomConversions,redisReferenceResolver,redisConverter,redisKeyValueAdapter,redisKeyValueTemplate,data-redis.repository-aot-processor#0,org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration,stringHttpMessageConverter,org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration,mappingJackson2HttpMessageConverter,org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration,org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration,messageConverters,org.springframework.data.web.config.ProjectingArgumentResolverRegistrar,projectingArgumentResolverBeanPostProcessor,org.springframework.data.web.config.SpringDataWebConfiguration,pageableResolver,sortResolver,offsetResolver,org.springframework.data.web.config.SpringDataJacksonConfiguration,jacksonGeoModule,org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,pageableCustomizer,sortCustomizer,spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties,org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties,org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration,spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties,org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration,spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties,org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration,spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties,org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor,org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration,threadPoolTaskSchedulerBuilder,org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration,taskSchedulerBuilder,org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration,simpleAsyncTaskSchedulerBuilder,org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration,taskScheduler,org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,scheduledBeanLazyInitializationExcludeFilter,spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration,httpMessageConvertersRestClientCustomizer,restClientSsl,restClientBuilderConfigurer,restClientBuilder,org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration,restTemplateBuilderConfigurer,restTemplateBuilder,org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration,nettyWebServerFactoryCustomizer,org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration,tomcatWebServerFactoryCustomizer,org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration,org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration,reactorResourceFactory,spring.reactor.netty-org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties,org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$ReactorNetty,reactorClientHttpConnectorFactory,org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration,webClientHttpConnector,webClientHttpConnectorCustomizer,org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration,exchangeStrategiesCustomizer,org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration,webClientBuilder,webClientSsl,org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration,characterEncodingFilter,localeCharsetMappingsCustomizer,org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration,multipartConfigElement,multipartResolver,spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]; root of factory hierarchy
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:577) - Retrieved dependent beans for bean 'reactorResourceFactory': [reactorClientHttpConnectorFactory]
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:577) - Retrieved dependent beans for bean 'reactorClientHttpConnectorFactory': [webClientSsl]
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208) - Invoking destroy() on bean with name 'reactorResourceFactory'
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:577) - Retrieved dependent beans for bean 'taskScheduler': [org.springframework.context.annotation.internalScheduledAnnotationProcessor]
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208) - Invoking destroy() on bean with name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208) - Invoking destroy() on bean with name 'taskScheduler'
[2023-12-29 at 15:47:54 CST] [DEBUG] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:313) - Shutting down ExecutorService 'taskScheduler'
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208) - Invoking destroy() on bean with name 'redisKeyValueTemplate'
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208) - Invoking destroy() on bean with name 'redisKeyValueAdapter'
[2023-12-29 at 15:47:54 CST] [DEBUG] org.springframework.data.redis.listener.RedisMessageListenerContainer.logDebug(RedisMessageListenerContainer.java:1003) - Stopped RedisMessageListenerContainer
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208) - Invoking destroy() on bean with name 'springApplicationAdminRegistrar'
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208) - Invoking destroy() on bean with name 'mbeanExporter'
[2023-12-29 at 15:47:54 CST] [DEBUG] org.springframework.jmx.export.MBeanExporter.destroy(MBeanExporter.java:468) - Unregistering JMX-exposed beans on shutdown
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208) - Invoking destroy() on bean with name 'applicationTaskExecutor'
[2023-12-29 at 15:47:54 CST] [DEBUG] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:313) - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:577) - Retrieved dependent beans for bean 'mvcValidator': [requestMappingHandlerAdapter]
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:577) - Retrieved dependent beans for bean 'requestMappingHandlerAdapter': [mvcUriComponentsContributor]
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208) - Invoking destroy() on bean with name 'mvcValidator'
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:577) - Retrieved dependent beans for bean 'mvcResourceUrlProvider': [welcomePageHandlerMapping, welcomePageNotAcceptableHandlerMapping, requestMappingHandlerMapping, viewControllerHandlerMapping, beanNameHandlerMapping, routerFunctionMapping, resourceHandlerMapping]
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:577) - Retrieved dependent beans for bean 'redisConnectionFactory': [stringRedisTemplate, redisTemplate, cacheManager, reactiveRedisTemplate, reactiveStringRedisTemplate]
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:577) - Retrieved dependent beans for bean 'stringRedisTemplate': [chatController, fileUtil]
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:577) - Retrieved dependent beans for bean 'redisTemplate': [redisReferenceResolver]
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:577) - Retrieved dependent beans for bean 'redisReferenceResolver': [redisConverter]
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208) - Invoking destroy() on bean with name 'redisConnectionFactory'
[2023-12-29 at 15:47:54 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:304) - Invoking custom destroy method 'shutdown' on bean with name 'lettuceClientResources': public abstract io.netty.util.concurrent.Future io.lettuce.core.resource.ClientResources.shutdown()
[2023-12-29 at 15:47:54 CST] [DEBUG] io.lettuce.core.resource.DefaultClientResources.shutdown(DefaultClientResources.java:735) - Initiate shutdown (0, 2, SECONDS)
[2023-12-29 at 15:47:55 CST] [DEBUG] io.lettuce.core.resource.DefaultEventLoopGroupProvider.shutdown(DefaultEventLoopGroupProvider.java:317) - Initiate shutdown (0, 2, SECONDS)
[2023-12-29 at 15:47:55 CST] [DEBUG] org.springframework.beans.factory.support.DisposableBeanAdapter.logDestroyMethodCompletion(DisposableBeanAdapter.java:361) - Custom destroy method 'shutdown' on bean with name 'lettuceClientResources' completed asynchronously
[2023-12-29 at 15:47:55 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208) - Invoking destroy() on bean with name 'characterEncodingFilter'
[2023-12-29 at 15:47:55 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208) - Invoking destroy() on bean with name 'formContentFilter'
[2023-12-29 at 15:47:55 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208) - Invoking destroy() on bean with name 'requestContextFilter'
[2023-12-29 at 15:47:55 CST] [TRACE] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:577) - Retrieved dependent beans for bean 'fileWatcher': [sslPropertiesSslBundleRegistrar]
[2023-12-29 at 15:47:55 CST] [TRACE] org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:229) - Invoking close() on bean with name 'fileWatcher'
[2023-12-29 at 15:47:55 CST] [TRACE] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:577) - Retrieved dependent beans for bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory': [org.springframework.context.annotation.internalConfigurationAnnotationProcessor]
